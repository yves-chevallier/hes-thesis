%!PS-Adobe-3.0 EPSF-3.0
%%Title: (niagara2.eps)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 17:20:28 12/21/05
%%For: (Canard)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 531 219
%%HiResBoundingBox: 0.0 0.0 530.838 218.742
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 15202 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreateDate>2005-12-21T17:20:28+01:00</xap:CreateDate>
         <xap:ModifyDate>2005-12-21T17:20:28+01:00</xap:ModifyDate>
         <xap:MetadataDate>2005-12-21T17:20:28+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>108</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAbAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6V5w8weWPIP5ceXNafyt&#xA;Zaq979Ts2iKxQEGS0eUyFzDNX+5pSnfrkoiyiRpidr+evlWen/OgWKk9vUhP/Yrl4099Wk5vJMU/&#xA;Nry6y8/8AWYXx5RU/wCoXJflvNj+Y8lw/Nvyqf8AphrEf7KH/smw/lfNH5nyab83PKo/6Yax/wCC&#xA;h/7Jsfynmv5nyXN+ami/VPrkf5dW0lp6ghFwvAx+qeicxa8eW/TrkDpwDVshmPcl1/8Anb5fsLmS&#xA;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</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:A9CD4D612B72DA11AE5B868CC1F4A33C</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:A9CD4D612B72DA11AE5B868CC1F4A33C</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:6367d44e-2f8f-4281-9395-18bc63645d06</stRef:instanceID>
            <stRef:documentID>uuid:889D0F893472DA1190E0B3EFEBFBB1BC</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">niagara2.eps</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Canard</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 530.838 218.742 rectclip
/N11 [/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/ColorSpace defineRes pop

q
0.0 0.0 m
530.838 0.0 l
530.838 218.742 l
0.0 218.742 l
h
W
n
n
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/E9 exch /ColorSpace defineRes

cs 1.0 1.0 1.0 sc
0.500000 0.499990 529.838013 217.742004 rectfill

q
n
530.838 218.742 -530.838 -218.742 re
0.0 218.742 m
W
n
4.0 M
true setSA
n
530.338 0.49999 m
530.338 0.49999 -529.838 217.742 re
0.003922 0.007843 0.007843 sc
S
Q
q
n
253.615 210.078 -243.78 -178.431 re
9.8349 210.078 m
W
n
true setSA
q
244.438 0.0 0.0 178.584 9.70795 31.548 cm
q
n
0.0 0.0 1.0 1.0 re
/E9 /ColorSpace findRes cs 
<<
/ImageType 1
/Width 509
/Height 372
/ImageMatrix [509.0 0.0 0.0 -372.0 0.0 372.0] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /DCTDecode filter dup 
] >>
pdf_image s4IA>!"M;*Ddm8XA:OX[!!3,S!/(=\#RC\B#Rh"G$kWjS$P=*a$k*X](_[Pt',)3!
&el#o'G;2u)]Tn=)]'bF-RU/b2)@$E2*3l]4$,Mc4$,M)%1<OQ%LisZ%M0<a%h99f
&.oKc'HIl%'bh?&,oRR9(Ddu9+<qpK*[;dU-m^/f-o*P31,:pQ4$,Mc4$,Mcs1eUH
#Q]#Jr<!'E!!3`5!tbS6_uW(&!!*6(!<E3%!<<*"z!rr?'"9eu7#RLhG!<<-(!<E3%
!<E0#z!!*'$!sAc3#7(VC$P3:="9AT+"9J`3"pbA7$o7na!YGM;+VHL55uD&(,&r/h
"r*2nYsKZ\'iMkW1Gj-(d6e-bP#Ll/nRHVt(8A*e-:F%sA4=A1F>ar`<T7T\Z\66F
FlW'_-^:E\[$ASZjRf:V`RX)C<b?N0QDV+1f&lZb7os>ILR4pJa4KMK&HDk6!<NB,
!sAc3#6tG:2$![Y&Ha12&d1Kt@<!J)"YtXk'VVcu,Jd:*n1u>!iGsO56W4_0F#<D5
"r<r=K*N_\_U:i9<217?79)6fA`E9eKYu8]j7>a)UkQ1@`73l?V7":mjn2YdG(u<[
[`6n\p*Vdh=(c`4Q`%=5s4RG]!s&B'&H`UF561<O<U,hf!l%Q0`Jh6mN7*74&R&.b
@87/s6>8i$.EG$nK^Gn\&[XX9,VTPA-_To2`jZ(I[&4'a&=b#C8L0HK;Io$T;TU1_
,c)h:'ZC5,<!na;"JhnI6ZSZR)j"=?W"h(\;c:Q28>\['UmWKm\k/&V9;It$Pe'GL
8P>kI,a>l3P"A<BR3\$.8WlY<UmWKm\k/&V9;It$Pe'GL8P>kI,a>l3P"A<BR3\$.
8WlY<UmWKm\k/&V:/qa)Wt;;Z'tV7q>Z3KpN?q'&P-f3_h-h3L/O`ADET(TkFQ^@p
>9,Aifl7!M='(%$1$E:/qjlY)6<O:ZJM/=/d-Q-I8Qo,B=hKgXccpV*eQ$&qd*^pO
UH(s:N')a,XCOeZr/.(9ea/"m24qF'M%C1@+dAqc&"$_Q/7dtDfo5(a(TCqer*4d`
?mj"+_s/=E6l/_g+1c_q7jpI#36T/SOIB4YB2*eBK%M5YfhlJB8.DhcN?l#*'J*/t
,,.t6&t#RH,pb*7JLX)RPS1sS%E1oX%E/IT,s\FBTLoMmVFZs"Jle2bRSoB7\oel_
;H"jhRSoB7\l+tpPa&hW.A\Ib9?L/$;O!EYV(&5i8P@3(RSoB7]VLuoPa&aWRSoB7
]VR'R.7m1T;OULJPe<hAV("u/b#4[+Pa&hW.A\Ib9?L/$;O!Ef.8c>+,r1^K,a+Tr
"`C3Z<NB:?FVhOjd$!;%`&9Sg]0;"sc%H]P%Sq\Mom`hX*8NV\hDG_^W)hfDo1bb>
FCNQ<*isMh<[5QW.&moEW,7]cV(*FJmR\tk.8\fk;RB@JP[utRC2%f3QVL`k!"1k1
mp'd0kte/D"gC>^j]9[BX"L[`LQ2_))(B*iDjO["BgQ)Y<9Z'8mMfUN%Fg[W.``a:
O[p-"Nens7,s\Gp&qZ72#:[1maXMk(b+"LJJjU/M#u4GlC/uW;Uf/P(,q5!C9?L/#
,a>s<.?[7qb#4WQPe<hAP"A<h;OJep]VR'?8P@3(R3\$0V(%R!9?L/#,a>s<.?[7q
b#4WQPe<hAP"A<h;OJep]VR'?8P@3(R3\$.8WlY<Vj.sZ;@5meF<);>HeY:2`mqnK
?WUqFbqOoAcY_$K)bhBI)XnNFj9ceUV2QFH,c^Dn=b+ncjL6O0ACRF1RrX*P.3NYZ
aC.,%8fX?]$<)P>'*=^13D:,dLGoRQWlQFBfWITAoS;#\HXV*V%jMjkL2F/1fVp#L
(.pL\AbaPZ3\&Eh$bGV1=55+HCq%>8HS;3YK]oL,@'H#[iY%naX0J2?6E8s1En2NG
b%.3V"J]uVOW9,:&r`b(187)A?rJKcRLiB=-\Tj0<0C(B,c)cN,mc"l,mcn1;Fs2O
P*D,+PU*(NPU-Vb8L4[08lA5I:m.'+:m<6%,a9S].7kfl6:t-I6;Wi0P#.AgV'M9O
#q8Fl#sq6^8O@Yn9-g)AKTqN0^@8b<WpBr0%ktN;8l"?>mCo\(gT-qXJJopW?KdC^
KeL[S-rl;oiJ]&i:m<)g0TZW<U]O.u$/nJi_Fe5C6C]>.+b3Go-qoee!i-//.UgEP
P"Mj?e+%GZhS9Hc1e/$LpOL[fA43C2nm,InMT^o8Di3Y_0hlOH01)r&iPk^:'oCH:
*VYm?B(,1.'eV&bOYOUIh2`m<2=BuF&7GjFfiY]6kAF]I9KGZKbu8ZuL*T2UKL42-
WMr3NNmrK6H>"V-=IWd+kpH%c;d4!@<M)i98L67&V6sIuP4Xo9>A@ABT1L\-,rN--
[9<-boTE-WC0O]18M<X]27B?h=nImLP#GS">?.:e01dHI[\^B7oTJj0;d4!@<M)i9
8L67&V6sIuP4Xo9>A@ABT1L\-,rN--[9<-boTE-WC0O]18M<X]27B?h=nImLP#GS"
>?.:e01dHI[\^B7oTJj0;d4!@<M)i98L67f'Xk%`P$X;DF>:"mN>G78l.G^%#YMgo
p7<%[-6&=AM:*TT=ol+-YMEDTPUPO,:^<)A$D`EYOg>Lr6C]>.WF6+l8chg%;UD!J
:C/I`:C5H@9OTYjRUhYC&ciUY6<'g1)(munG?+uL1;O$:"1i<.$VYb`\unJehc1,I
/0j,reu(6f>OKj/'BEE(T)=L-KlG^Rcq^]C3qck3li`k_5r%H$EY1(OQ=jo5j0L*e
C(MCQ\RlXRb'$S.1?UR3jQRT\`2nlGX5I8XA-"8C\[k=pf5]_8k-=ok?]Fd(qMPRF
H''iW;"23/gs1]mj0lrfnkUt6&f.DKCg'5Z\4bD!)nL2cWs<\g3O?pM56<!?RSSOa
qUbCpXGkA)<ciLHR,U>TqnFTr#\I[!DJpmm%gNSC_6L0,3c22g;Pko6=sjqE.1C,?
#Z\FlLQZ"WnlfNBaZnIkO@tr6IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@
IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbS
jL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1r
jHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4
P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@
IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#L1o)rQP+
RQDsKU]QG,.4%:m8FD/\;5d/3E*4IUPU<5;qBZHr;T[?Y,q1+51aJpG9aN)AdS-28
.M+A)qDa"<YuX0pmUkLh^]?5G!X+]gVQ6K(6PgcOAo91C;Ub-%/AJ9W38VFf21'lL
"gTnOO&MS?cEkNA:qJo\/8;?U"p70_jZer[)#/p_rEmJ3>FIgG]sN#jU!Tq[L:4QX
h0p@D!-6&&9XA<4%/)O"q.]aCWO(sbhWp+g&jNB2-Zkkk@pSI%^Rpt(`&`V[4U^C1
i8n>0=@%I.*tT`*qQH<(?"<SVha8ka*(0BAa-^0+-Uu(PW^E3bc,::nY3VG=3#-*)
DE7?FY*Z]7&#6Ob@t,3A>D/%RTmcu.3,l=-X<9QsQP+#Vq^Prb$V/SN]b$I'SGrSq
KYG_o(6>8\dRqt`J(aa_q`g7joTJj0Zr<UjIjDbSjKq&q]d0^ZkP_$p0=1I+%nSEG
.nr&(!,(jqm,PoqH:`ES=t.ep5E]Adnld)t?BS?hF8jMHQeD;&LSU94Q)^AS!42JI
p4"B^kp>R?C8X;_r^hO1a^=\'oTHU\6gXeDI@Xa;PBpP,>%sc*FM?&(H<s0h?:e>"
U\8fDcfD;+?:fH7=t-0=IjDbSjKJDOr?SLEkP^oq-i5T!r?VB(9%-Obfn*RC$U`>K
H9j&]3WB(k$,4\#O/*E\]TT[$Sb@']QeBE2dIb)8H:_;>chfqi?YAq5*g0im<f2*Q
QrNWt=cCVD8aI3&='s.Y`Kd&i^0IOk'"H!fWI@8MM6Z$7bc8^d@C=j*-H"r^jdE^S
9s6/s`2u.,C;_KH?uBg$AF/bpk;N>?c.a`#'<#'Db[?61'p0K7U]U$g6;XMQ8[Q(]
_GI)'=sZeL0U*rNW4L!/ku+W[QAA>HGbDY<if=Eu[3NXMKABB`NtfJWGb`'W-Up@#
EgZ/Ep;!50O91'?S_7Ut$a)\UJk(&[Q3cOk1=TU)gu6a*lN6pOgFXukcF[=$FR>ga
o(2<1:;644Y.p^KU%2Ai)(m2U<%T],dcLcoE)*Fg@mP]9b>sY6HX,p,>XLJd4GNrE
a846a!)/li"Hj_erl("de+YPX-1`^PTL6`75>(IVh1YYl"Sa=V?FL_(W-,[Y?8E$I
\86=SciG'PnNR2VdeYjL8u1'(QT,!.SmZ_Hc7`,^'K*;IC%U/T=TEt7Zs3Jf4/lO2
-CmBL%r^Bo/+BCPSHfHg/Q4^,$*03T$#E%`qbg<4M/5Z8QIM.S@Vpqu;VI:qCeJ5$
e@)0K)\Uea[4S@,%`Ge#CeJM86a85!gJZagODIR!51I$:U`0s!O0LU]P_3FL&b[R(
P)sKQ@Qr;MUneqBfT!-fM(&qQq[n"Lg6.Qa:U(^NIAnY2`;:-iVqR;qlq:eGe@)0K
3tg2*[4S@,#/mqpm7ju7+kW+!D5hAD9X8Z+ONj\p`F<D#97\^s:VgrS.>K)m7`[:f
jT[nK-WUq-nuZOIL!jgJ\H&RuCj0p9pET*M#iP&SR_"u?[pN5.<rU!mJ&-en:W*.H
JMHMQ-/B5\_!t>$YWPcQ:W*.HVD*!['nk>&ACS6!O'(mK4]]J9-!kIA38okoOTflf
)@+A7O(?Z+k'a]jrr>Nt+-L!m.l^rZ's"6CV(OD)E;6tnA*P`.[D+RBddiII\.=*n
Eh+g,Xq9b+O8IP=quUlcl0iE6c!O.:*(RTM6VMU%#Nrkj89EWqh<3ctU/X]VcZINL
4/R,koVlVeM,6?"ViELtrr=l+/gtTcg$X_<Ra/derr>>kS9mSR`l83O/-l$F*R^TY
ZD:s0RXM8Np])"l_GH+*Kch%ZS-5(`-\Uu\&5*j4'VRW7L+nqD-r1-qL=EZ2_GHD_
D+eUh,mc"AeGE5(-qR)jVV6k56:sbU/Z=bq,c#cbg8>6D8k01SS0\Ij*$kr2PTkhn
PUSpqP*j*_V$TI\@gV*d&qgt='>ft[#q:f\Kd]P+9-(!K;hUhj0\ViC3(af^%B42C
K^b.dKcl`d+;$s!81"[/+I0g*9G<'na;!Se:(g1`djIFR:74.8?W<jW8L[').FSuq
`2JqVU/=hjTL'e/,UA%2.$gThR"SG"C/Cf7Td;FHn=C<18m2nF:n8ma$/mp:.;2K`
iB/B_0V/rpFHjcXKd]_&.?#P[:m<6&0U+"Q:m.24:o+Ib8n/1$:(orD@gSi$&qlLh
'1.jq8P;B`;M:33(ePL*8P;BHSN9AH&qoN.,qTEiPU-VbBM&u%KTrhi$;cs0VD+5`
6;WhKiCGAN+Ioj$;?907KG(d$_I/o;Y,%ef&lOpHP"A<BP"7#n,a(bt@\#q6.&`CV
`>(*VLf.)!.>^nOBp(gh8edI5V34T:8m+2H,c)jh+Isf-3_@0q<$_k!8LfCe3_:c6
:C5u.8P;B`;M:_i0nc5]8L]TF;G<7>9V!Gj`Y0dJ.&ga?8L5pY,a)&g8N9:6K]sjU
8kKbMkTsn<#q&;;6?l946:tB/;Fr/l!g$7d5o$JQOAQ?N,d%fX$.)T7_I/lZQ-r5L
'ZhV`8P2Q"P#@Jk9Tk]8;l1umAApQ&;,\1O75@DCP'"dEA<KM1.6:$'Pe(tYdSb[[
@%@G"3_@1\<$t6_PbaI6"Xt^[8P:>",ZM`<P%9fr16Q+0R&$9.-s8<GP"Jk&P"A<E
9G<)D\k+7T.7qr_P#S"c$.;_78L,"GPJVF+dS^C'FQ>%gJr5X]98+Z'Uk2YS_I/lZ
V:%p\'ZhV`8P2Q"P#@JXl&&)90i",_/=<>/;,Y@gEg\1(R&<VT;NiJ",q1+'UnoG1
,S[h/P&uk_kpK%p8L0BqksBKS;UCh'0hG"`P"7$2R5mruQ77]5aXLcBdj0X)8JI:b
ajVV/8dWro8P>rfPG"c$VG<:U$.C7f8ktICP*D,$,c6r(P'#b681%(E;W128.3Onm
E1&[W9;I_A.?[7JP*D,$,c)h:dhJ%PAE>R==Yb*?WFD8U9Tg/bSMDZm8L0I`SMG;O
\j7Tn$=o\_E0=9/dfena8]##s"YPs0,c)cL8L\2lb%-aBAL/$iYtUrm;GtW#VF_.@
SMDZm8L0Ic:74-M;KU%/9'T"u8L\bE8Hg^[V?t[KPGV*<RVC4u:.!o!9UmB)_NK^Q
5qAi>PD#138LHesUln:u8L0Hk;IZ1O8P:C*;^A3'-VTD`.?g"<+_8^D,,HQJ8L[6[
-V6t,&kF.B8^f%Y.tm/=FHiT[13=5A8L0I`P"?pqMIbg(8lCP0A5og2;CX+EABE:G
KdKQ_,q1+&78'OPSL#^V77dWbSMG;O\k+0!QO2+g8P>kB8L^O-13DS0'841]8P=a`
&>XnZ:(nu].<L_E"YrXpP#@H7,a>+D3b"8<9UqtO9.!E%'eE92.?[$>PGUc@8L0Hs
PGV*<QUiB`5tmK>:6JZbdfena8^f%Q9;I_B.7keJ8m%rc;^A1fW?t&,'bqpeP*Se4
1.Y;Rl&nr-8L.9HFNMs/Pa#./9'OeP8P>kB81AZFPGG&'8L0PL:74(:6K'mt'82U[
;Gdcl-$8*$E0?PZ,`kqMP"?rK,a(_k9N.f;.:gQCA<aB1l&el_13/d./=AP0PbaI6
'e)1Skp^_+8H]aL3b7J$E1Jb+'VsuWUnuL2,a>*f8L5od-Rk3VPZ3hjV2C.m;+XD-
:73@V13CVe8L0HK>rlN[.8!2^8L\VK-;G1Gkp2E!>rlAa,qb?P,c7#PajZ?]:(mch
,q]mr6BVX\3)#hfV:%pr$=+p?8P2Q"P#@JXl&&)913CVeABE:EV2AgF1.YP'FNGt'
,a'WTFNMs/kld.T.?\epdRrcQ-UC@"R7S\R,a(_k8L0Hs`A2J%,q28S1+HD)W>-,3
Z=N3_6B`cjMNj8q,c/te:4e_+U83s=:(nu]-$5;A"YLIc$.;`9,a(c6VbEXA$\[Im
:(gI`8OP!MQ,7L--OD5Dl'%d:dRb^KUln:q.5=SbUns8&.?[TNPGUcA'ZnL.OKrE]
P#@H7,ZLT(PGG&'#p^'\,jCMgQ,7XZ3XScJMNUS08L0I`P"?pqMIbg(8lCP0A5og2
;CX+EABE:GKdKQ_'e(Dk8P>sTSHUH677edXS0guD9'IUa$="rPSL#nO8L11%FNN!n
\5!\?i?^)jPX:N>>UKi0E0?P_R5t[\,a(_k8L0HsP8*8=8m*oiR3aDP3b23p9UqtO
9.!E%'Ib;j8P2aF-V6t,&kF.B8^f%Y.tm/=FHiUJ'dOKhP"?rK,a(_l'ZnL.PbcFM
,c-BUP):_l13CV]8X$#?8kC:k;X)XX8P2lX;F*sR$'V0MdRb\uaX!$@9;I_B.AiXk
FQ>%fKY]W>98+Z'Uk2YS_I/lZV:2;:JsT%SP#@H7,a>+D3b"8<.?g"<.:gQL,,LJN
9Tk]5,`tF8,a(br:7*D#9;E1k+Jq`Z-V5hAl%4#AV'Qj%'Vpm`,q1+&8P9c>b%-a4
ajVH1PZ3lF;TY-"8IA.^1+H0n,a+KhR6!r<P)>D0>UN2YUm9A",S\?GP"A<BP"@+"
SMG<J/e`oS3(Zbs,nQl(=&'DV#q9u\PG"c#8L0OrP"?rK0i"+3V2AgJP#BDcVF=-)
:73CZP"?pQP"?ouTUdc3P*\]bO?lR(VG<:U$.B%@.8!2^8L[4VP"JVD,a+HBPEa0<
8X$#C9.6&O'NDAKl&nAs-VTD^P"?pqe##llPbb%LP*ZL("Q:W/P"?dn8L0Hk>pPS)
9f2*uV]g#L-4.O]>U_(T,SI\-R5dc2V];R/&5qa<P"JVD,a+CZVbBudaciSn9.!E%
'eGb6A<aAk,a&p7,`tuVE0r!Z.<L/5";Js=AEbCZSM3fjPbb%LP*D,$,c)cL8L\2l
dj1b::73CZU7F%h=X9/%$RSW:'e(Dk8P>sTSHUH677edX';c)Q8R3U)5tmG5,a>l3
,a+U1f?G`l+o5Fk$g)Po;tS./?SWmY?`+Qko+FVDqKY&-0I27BW"NGjUlq@K&mm;f
P+SZd(%VJu.Je<Fq2$A]rA^1JR1_qadn,nMaX!eKKU9pI,_tW+Qd#g\Vs//kI*RmI
I[NqIbc)__l*Td=1m1N(kYAj#8Hh=S.5.%98PdhB0:1*Y:Xf\(QdSH$e*34C.3thU
jNH[2P#M#4MYWM_<;eS8q3`Lir@jXed#ol-QUuSOP"L1j:;1=3"[>\[0:<GE0@Pcp
q2$A]rB-8=Kd7B25a(qk,aA6oP50AKPlCa`fa7~>

n
Q
Q
Q
true setSA
0.9451 0.91765 0.86667 sc
%ADOBeginSubsetFont: JOXAAA+LetterGothicStd Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /JOXAAA+LetterGothicStd def
/FontInfo 8 dict dup begin
/Notice (Copyright 1987, 1990, 1991, 1995, 1998, 2001 , 2002Adobe Systems Incorporated. All Rights Reserved. ) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (LetterGothicStd) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-20 -288 620 928} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-14 0 720 742 529 540 792 792] def
/OtherBlues [-212 -212 -288 -288] def
/StdHW [40] def
/StdVW [47] def
/StemSnapH [40 72] def
/StemSnapV [47 72] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7C3C99EC8FF8B9100BA5C2C656175F8DCD8D90DFA62
22BC9CB1BBD206D4090239AC433970914A2805506BCBB1412E58C1AC0B10BCDA
5C256D5A2AAAF6E072B4784FF97CFCDA8A61B4C6C8284B6D77C0702060947B97
5B44EE> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[/N10/JOXAAA+LetterGothicStd 1 TZ
85.2798 189.298 m
%ADOBeginSubsetFont: JOXAAA+LetterGothicStd AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JOXAAA+LetterGothicStd findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/bracketleft <1C60D8A8C9B7C3C926012733C3AC9DDC7D012DF38FDA8F1E4C
755130EF7DED3329908FCF1B7E5B1EB640F48A65> |-
/l <1C60D8A8C9B7C3C9B5778CA9CAE3BA96005767F9522C9235EDD208A488AB
D3C46F5B550645> |-
/u <1C60D8A8C9B7C3C99580831EF3A1DA3034B9B855DB2ECFE8BA0B51039987
7878BC890FEC890BBFAD3971507055BAD582D1534327D37C23230A59CCCBD10D
4713C08BCC37D382D864AC46EAEA9B86B392DDA33E73893DE3FD5B746FB468CA
26C3AC2E> |-
/m <1C60D8A8C9B7C3C9CDE177B286A87C57D00F6650E4C6478EB4CE0D000DC7
A7399FCCC910D45465D877D2C87C0B88455A2857172964740FF2177E383872D7
02ADBFD7FAF6ADD5922D1519CF1CD67A85639EF5247FB47370AFCC85D29148C7
F28EDF590BD786D191EB4DFC829FE4D426A1> |-
/i <1C60D8A8C9B7C3C9B5778CA8B7D0B648A21E732B6DE780DD1BB02450B44D
64A33E799C9F78D44AF597CEB493E0EE37A53CB2FC521C0576B31EBB9D41BED0
B3B5812A30102C904811938EB4A5BE4239FBA94F73> |-
/egrave <1C60D8A8C9B7C3C9958083114F72F4F57FD487496A13664D5A51FC2
F92424892FFC6E3C0B5B2185F00D98625D21FB1328DB20AE15D519BEAAB210C3
AA7038AEC234DC456D7A2D2FC7F8B8017BAE04712E6A66213C4DEE04BCBE7386
11726C68229130A32988A475090D36958D55DE939F855638E7A97BB689A8B> |-
/r <1C60D8A8C9B7C3C9B5778CA842B8CB90A0F1E5F5132C531AAFEE1079EE59
B6DF4542F6A2F81E0B1939EFC9D4AD6B3AC652F03581E7108587AA1761DD1114
985BACB4675CF3DB7909437D5AEA52B4B1E0C31A7431435F63165DA4> |-
/e <1C60D8A8C9B7C3C9958083114F72F4F57FD4875CD01AEBE880C458E6F624
2C571E4EBAF81D9304F5DFBA7AC21AA971918D7DFBF37D123D28D307C993A7AD
99A0EED865A1C6BF6B88986BD9249EF74EECEB214C8888FA0D63B86D4210EE4B
29A16A8C7E22DA> |-
/bracketright <1C60D8A8C9B7C3C926012733C3AC9DD3F8C615C861A9F29CC
72FAC4C4414D2362A4D885ACECD5967A141AD56DE> |-
/equal <1C60D8A8C9B7C3C9E2E929EA523999DE55E9D466391B36EFB95B074E
B65AD32D12DE0B21D16C1FCF4F4B8730E62C> |-
/v <1C60D8A8C9B7C3C98C844FC71F071D919CE17D28DE197F6D9A7BE1431494
1AEFA46A0123EB8A3888A1F5F1FCF3DCC2739841F235C25CDEFF16B6D33B04A3
B6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JOXAAA+LetterGothicStd findfont /Encoding get
dup 91 /bracketleft put
dup 108 /l put
dup 117 /u put
dup 109 /m put
dup 105 /i put
dup 232 /egrave put
dup 114 /r put
dup 101 /e put
dup 93 /bracketright put
dup 61 /equal put
dup 118 /v put
pop
end
%ADOEndSubsetFont
/N10 18.1953 Tf
([lumi\350re]=[vie])
[10.9173 10.9173 10.9173 10.9173 10.9173 10.9173 10.9173 10.9173 10.9173 10.9173 10.9173 
10.9173 10.9173 10.9173 10.9173 ] pdfxs
0.18431 0.24706 0.31373 sc
103.25 125.729 m
%ADOBeginSubsetFont: JOXAAA+LetterGothicStd AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JOXAAA+LetterGothicStd findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B7C3C99580831EDE541BAFA88C4BFD42864A057C5F42B9ABDE
AC6B58F71F0806788748F810E430FCC53035EBDAAACCFD6D31BCE4A712016A2E
7024B93654D595B3B55637F523626204A00256845E> |-
/q <1C60D8A8C9B7C3C9EEA44EFAFAA41B4EE6E692EB4F6B8F56DA734537A71B
A7DECCAC2A4C4258CC2EA0A9E5EC6EDA8B65F276179B74A7F3DE76706C04D81D
8787240F74E3F7941D1B25C6527C72A3CAAA679D508493493D92A88C4C0BB351
5094FE5870300F2B9C99C0A260099DF7795622C69D3DBD36EC36BF6164CBBE6D
CB29B1F66050F269D293E6FC761E4976F4841188C9E2D1E7FA5866> |-
/z <1C60D8A8C9B7C3C99EC660F0DD8CEC492EC90A8258C1DEBEDB4FD8869903
B3415202EAFBFF6320FC48F1016CFDC9F1474DA0D3BE5F2BC023436C45751C74
90F9F7D0FCE42CF72D561EAE765845741CB5E8> |-
/space <1C60D8A8C9B7C3C91B> |-
/hyphen <1C60D8A8C9B7C3C9E2AD8E2A7EAD1A72B735D001FB2E7B17336C0BF
96102E6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JOXAAA+LetterGothicStd findfont /Encoding get
dup 99 /c put
dup 113 /q put
dup 122 /z put
dup 32 /space put
dup 45 /hyphen put
pop
end
%ADOEndSubsetFont
/N10 7.8232 Tf
([cliquez ici]------)
[4.69319 4.69319 4.69319 4.69319 4.69319 4.69319 4.69319 4.69319 4.69788 4.69319 4.69319 
4.69319 4.69319 4.69319 4.69319 4.69319 4.69319 4.69319 4.69319 ] pdfxs
189.545 133.337 m
%ADOBeginSubsetFont: JOXAAA+LetterGothicStd AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JOXAAA+LetterGothicStd findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/greater <1C60D8A8C9B7C3C9B5778CA9FCD669F86D481401226F30FC09DDE5
48C33A487CE9186484D10375FABA535948356A99> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JOXAAA+LetterGothicStd findfont /Encoding get
dup 62 /greater put
pop
end
%ADOEndSubsetFont
/N10 [0.0 -7.822 7.822 0.0 0.0 0.0] Tf
( ---->)
[-4.69325 -4.69325 -4.69325 -4.69325 -4.69325 -4.69325 ] pdfys
0.20392 0.26275 0.33333 sc
170.643 94.136 m
%ADOBeginSubsetFont: JOXAAA+LetterGothicStd AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JOXAAA+LetterGothicStd findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B7C3C98EF80D8F8686073B6D9BFC544CE2DBC16C9B66B6AF22
9F86B3628CD3D3F98A25F3EAA5566FE6AA7E3681DF8576F61B028B98A9640FA1
56E2A042F614FDF2EAA5800F05411FC27131CECE2B1D7440E4928666A2E258CD
CDACF1A89B6C207916C82174CCF190053CD74B054FF3267E985B5425AEC1186F
9B8C0FCCB94AAD2EB478CDF7120F3B070063F65910957A53D0DF28CCB4DD60EF> |-
/asterisk <1C60D8A8C9B7C3C9ED84A734925AF9F1E74E44EC795B9331E42D2
689A19240ABFA58DED5AF5D6653622EEAAAD47FF19B69A7B0443E22FB9765720
0C1E71984D5EA62985E34A781E49DD93874728A7DE1C3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JOXAAA+LetterGothicStd findfont /Encoding get
dup 97 /a put
dup 42 /asterisk put
pop
end
%ADOEndSubsetFont
/N10 8.5198 Tf
([allumer]*)
[5.11193 5.11193 5.11193 5.11193 5.11193 5.11193 5.11193 5.11193 5.11193 5.11193 ] pdfxs
n
229.001 34.822 m
228.981 34.822 228.963 34.814 228.943 34.81 c
213.667 34.81 l
213.667 41.84 l
213.667 41.841 213.667 41.842 213.667 41.842 c
213.667 42.127 213.437 42.357 213.153 42.357 c
212.868 42.357 212.638 42.127 212.638 41.842 c
212.638 33.956 l
229.001 33.956 l
229.24 33.956 229.434 34.15 229.434 34.389 c
229.434 34.628 229.24 34.822 229.001 34.822 c
h
243.115 41.409 m
243.115 41.649 242.922 41.842 242.683 41.842 c
224.395 41.842 l
224.155 41.842 223.961 41.649 223.961 41.409 c
223.961 41.17 224.155 40.977 224.395 40.977 c
230.003 40.977 l
230.003 33.956 l
231.033 33.956 l
231.033 40.977 l
242.683 40.977 l
242.922 40.977 243.115 41.17 243.115 41.409 c
h
248.929 38.59 m
248.62 38.59 248.33 38.505 248.086 38.356 c
247.834 38.225 247.628 38.009 247.497 37.775 c
247.479 37.775 l
247.479 40.602 l
246.655 40.602 l
246.655 33.956 l
247.479 33.956 l
247.479 36.69 l
247.479 36.848 247.487 36.971 247.535 37.082 c
247.694 37.532 248.106 37.906 248.639 37.906 c
249.416 37.906 249.688 37.298 249.688 36.558 c
249.688 33.956 l
250.511 33.956 l
250.511 36.652 l
250.511 38.215 249.538 38.59 248.929 38.59 c
h
244.568 37.934 m
245.017 37.934 245.326 37.822 245.522 37.72 c
245.709 38.346 l
245.485 38.468 245.054 38.59 244.568 38.59 c
243.088 38.59 242.134 37.569 242.134 36.175 c
242.134 34.78 243.023 33.854 244.39 33.854 c
244.998 33.854 245.476 34.012 245.691 34.115 c
245.55 34.733 l
245.316 34.631 245.007 34.518 244.54 34.518 c
243.641 34.518 242.967 35.164 242.967 36.212 c
242.967 37.158 243.528 37.934 244.568 37.934 c
h
241.095 38.487 m
240.271 38.487 l
240.271 35.716 l
240.271 35.556 240.243 35.407 240.196 35.295 c
240.046 34.92 239.662 34.537 239.11 34.537 c
238.371 34.537 238.099 35.126 238.099 35.988 c
238.099 38.487 l
237.276 38.487 l
237.276 35.838 l
237.276 34.255 238.127 33.854 238.839 33.854 c
239.644 33.854 240.131 34.33 240.337 34.695 c
240.355 34.695 l
240.403 33.956 l
241.133 33.956 l
241.104 34.312 241.095 34.724 241.095 35.191 c
241.095 38.487 l
h
234.037 34.471 m
234.028 34.471 l
233.232 34.471 232.67 35.22 232.67 36.212 c
232.67 37.073 233.091 37.972 234.056 37.972 c
235.028 37.972 235.414 37.008 235.414 36.24 c
235.414 35.211 234.823 34.471 234.037 34.471 c
h
234.084 38.59 m
232.839 38.59 231.838 37.701 231.838 36.184 c
231.838 34.752 232.792 33.854 234.009 33.854 c
234.018 33.854 l
235.095 33.854 236.265 34.584 236.265 36.268 c
236.265 37.644 235.385 38.59 234.084 38.59 c
h
229.001 35.255 m
229.001 37.959 l
229.001 39.514 228.027 39.888 227.4 39.888 c
226.651 39.888 226.127 39.467 225.902 39.045 c
225.884 39.045 l
225.837 39.784 l
225.107 39.784 l
225.135 39.41 225.144 39.036 225.144 38.558 c
225.144 35.255 l
225.968 35.255 l
225.968 37.988 l
225.968 38.118 225.987 38.268 226.024 38.371 c
226.174 38.83 226.595 39.214 227.128 39.214 c
227.906 39.214 228.178 38.596 228.178 37.866 c
228.178 35.255 l
229.001 35.255 l
h
221.912 39.27 m
222.885 39.27 223.269 38.306 223.269 37.538 c
223.269 36.509 222.679 35.769 221.892 35.769 c
221.884 35.769 l
221.088 35.769 220.526 36.518 220.526 37.511 c
220.526 38.371 220.948 39.27 221.912 39.27 c
h
221.865 35.151 m
221.874 35.151 l
222.95 35.151 224.121 35.881 224.121 37.566 c
224.121 38.943 223.241 39.888 221.939 39.888 c
220.694 39.888 219.693 38.998 219.693 37.482 c
219.693 36.051 220.648 35.151 221.865 35.151 c
0.71765 0.76078 0.79608 sc
f
0.56078 0.61961 0.68235 sc
14.3203 63.689 m
%ADOBeginSubsetFont: JOXAAA+LetterGothicStd AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JOXAAA+LetterGothicStd findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P <1C60D8A8C9B7C3C9B5778CA742C29F8FE793D8ABA323B620B9292CE9780A
BEB705AA9C549DA90E6460066559E75D3B2856FC7B8875D62BCED80BA0831151
2DF05F2C2C1ED4CB977E3E2C74B5DA1E> |-
/t <1C60D8A8C9B7C3C99580831E2B22D0472053DB428FEB5BD35440EA875C18
B93750171B50DAC10676D12E56753A5BF88FB9574B1B85F33D5A92060B16AF91
BAE21FA4DBE6AD33F7171A0E99993F4733B76BFE> |-
/o <1C60D8A8C9B7C3C99580831EDE541BB53BF3FB6EB08E6D69BAF6D7BCA136
98BCE924D4000D981E32C42AF6DA6799E8A7ACAF97937398FEEF116C9E89C866
8085C053F4F31BC9B86BD0B890FD4FF48FB2B88B206A92CD> |-
/n <1C60D8A8C9B7C3C9B5778CA842B8CB9090DEEEF508526D719EC3379D5BA9
28903E851E383187564A8FC8231D80D9D7A910E5E9B85D39F1F53562697AF664
69FF8A2860D8A2147ED03DCF9D71464163D0010F5493C5EF4D87641981AEEE2F
A7DA7434> |-
/s <1C60D8A8C9B7C3C99580831EDE541BAFB1C243BEE4BE94981F2D22631F6C
D1CA90084891E9FF2CDBDEC9DC5694B6AF067BDF458E9D482FF4AE7B7FA2EA3F
ACF38441E30494D2ED0A745A7ED9CD5D98362B53DB0D7D218A5AE935413793D0
06837ABA10A2EE2F62B2F15CADB4E4> |-
/y <1C60D8A8C9B7C3C9EECA6F8388B1C2FDFFA4C3648360476B7CEEA862B5E4
CF50AF34C86A4E9B66D2B783C18A238974E24D40D83107BCF15AB120CDDCBF0D
2E0A34BD7B9E1D6DD375FA94E6642204E72B14D5CEEF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JOXAAA+LetterGothicStd findfont /Encoding get
dup 80 /P put
dup 116 /t put
dup 111 /o put
dup 110 /n put
dup 115 /s put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/N10 5.7136 Tf
(* Par cette action vous envoyez un )
[3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 ] pdfxs
14.3203 56.8321 m
%ADOBeginSubsetFont: JOXAAA+LetterGothicStd AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JOXAAA+LetterGothicStd findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g <1C60D8A8C9B7C3C9EECA6F83CAFF6B7F01F20A47F7537E5AD2EFC87C745E
4088CC5D171A8D9316031C79A84B5AF8D5DC6397FCF2AFF410EF2F0818CC6F0C
92ACA4F718E418FA8A13B523EFF07556D20A70DD474BF2B54E0D6BD7A00CC39B
16A9E332A55834C056E835BC9C7AFAF0C0BF1A2B754CDEE9402677492F8A32B1
76AD177B1CC1EEBBFE9EEFEDCB> |-
/L <1C60D8A8C9B7C3C99EC660F10AC271607D7834018FF1F01F4CF60D3CDEC8
F320F858B1400FD62E> |-
/T <1C60D8A8C9B7C3C9B5778CA9A41FC5F35F835180340848E508B16DF7D6C1
D5563CD876F621D8DE84CDAB7D8C79> |-
/h <1C60D8A8C9B7C3C9B5778CA842B8CB9E9D26B9AA8A2ECDF626625664E7EB
5BE6074446D643D5EA28D28CF7167483DDD5CA90368811AF10C7849F03A0DB1E
CDAFA54938B407F38ADC852F838122> |-
/period <1C60D8A8C9B7C3C9681D929D0D4F5CCE9F5913434077AB75E674C5F
28A450D033338B3D082186E6FDB3DBA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JOXAAA+LetterGothicStd findfont /Encoding get
dup 103 /g put
dup 76 /L put
dup 84 /T put
dup 104 /h put
dup 46 /period put
pop
end
%ADOEndSubsetFont
(message au serveur LonTouch. La )
[3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 ] pdfxs
14.3203 49.9764 m
%ADOBeginSubsetFont: JOXAAA+LetterGothicStd AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JOXAAA+LetterGothicStd findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/d <1C60D8A8C9B7C3C99580831EDE541BA11A338D0D515C999ADE9AB903E5D2
A8B154E2C492938F0397F1BBCAB918D905049168D246ADA9266803770BB3EFFA
61E6CBC11A8D4EB6C3D3E35777E05797778E6BD2B4E92D25429D3607C6E4C2D3
CB4C47920234655E07DA27BF44807793F1B7473CE779E0B1F1AFDB6929F49BA1
11974E2B143E17CB3975C4B1D7C24C193174FA482A28A6A7> |-
/eacute <1C60D8A8C9B7C3C9958083114F72F4F57FD487496A13664D5A51FC2
F92424892FFC6E3C0B5B2185F00D98625D21FB1328DB20AE15D519BEAAB210C3
AA7038AEC234DC456D7A2D2FC7F8B8017BAE04712E6A66213C4DEE04BCBE7386
11726C68229130A32988A47503898A0E3AD8D07BD059607DF42F8126288E128> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JOXAAA+LetterGothicStd findfont /Encoding get
dup 100 /d put
dup 233 /eacute put
pop
end
%ADOEndSubsetFont
(demande sera ensuite achemin\351e )
[3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 ] pdfxs
14.3203 43.1195 m
(vers le noeud lumi\350re reli\351  sur )
[3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
] pdfxs
14.3203 36.2637 m
%ADOBeginSubsetFont: JOXAAA+LetterGothicStd AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JOXAAA+LetterGothicStd findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/W <1C60D8A8C9B7C3C98C844FC68F5118D932E926F9332976AA1AF79FB36CB8
244D2F1CE0B38CCE3C50E31965E70BA9F2EF994E63644D1C8C1B43D2EA9622D4
FF3A3A6D8F937DB7B32160A1CD82FB60D05F> |-
/k <1C60D8A8C9B7C3C9B5778CA86F22FA7954700CD526511AC13A6B24379B0C
32CF85105C6CDCE27958B69C37AB38956D1177B7AA7CCAFEEF6733CD030D3512
95D04CF9CC83E293724ADC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JOXAAA+LetterGothicStd findfont /Encoding get
dup 87 /W put
dup 107 /k put
pop
end
%ADOEndSubsetFont
(LonWorks.)
[3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 ] pdfxs
q
n
518.938 210.078 -243.78 -178.431 re
275.158 210.078 m
W
n
q
244.438 0.0 0.0 178.584 275.028 31.548 cm
q
n
0.0 0.0 1.0 1.0 re
/E9 /ColorSpace findRes cs 
<<
/ImageType 1
/Width 509
/Height 372
/ImageMatrix [509.0 0.0 0.0 -372.0 0.0 372.0] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /DCTDecode filter dup 
] >>
pdf_image s4IA>!"M;*Ddm8XA:OX[!!3,S!/(=\#RC\B#Rh"G$kWjS$P=*a$k*X](_[Pt',)3!
&el#o'G;2u)]Tn=)]'bF-RU/b2)@$E2*3l]4$,Mc4$,M)%1<OQ%LisZ%M0<a%h99f
&.oKc'HIl%'bh?&,oRR9(Ddu9+<qpK*[;dU-m^/f-o*P31,:pQ4$,Mc4$,Mcs1eUH
#Q]#Jr<!'E!!3`5!tbS6_uW(&!!*6(!<E3%!<<*"z!rr?'"9eu7#RLhG!<<-(!<E3%
!<E0#z!!*'$!sAc3#7(VC$P3:="9AT+"9J`3"pbA7$o7na!YGM;+VHL55uD&(,&r/h
"r*2nYsKZ\'iMkW1Gj-(d6e-bP#Ll/nRHVt(8A*e-:F%sA4=A1F>ar`<T7T\Z\66F
FlW'_-^:E\[$ASZjRf:V`RX)C<b?N0QDV+1f&lZb7os>ILR4pJa4KMK&HDk6!<NB,
!sAc3#6tG:2$![Y&Ha12&d1Kt@<!J)"YtXk'VVcu,Jd:*n1u>!iGsO56W4_0F#<D5
"r<r=K*N_\_U:i9<217?79)6fA`E9eKYu8]j7>a)UkQ1@`73l?V7":mjn2YdG(u<[
[`6n\p*Vdh=(c`4Q`%=5s4RG]!s&B'&H`UF561<O<U,hf!l%Q0`Jh6mN7*74&R&.b
@87/s6>8i$.EG$nK^Gn\&[XX9,VTPA-_To2`jZ(I[&4'a&=b#C8L0HK;Io$T;TU1_
,c)h:'ZC5,<!na;"JhnI6ZSZR)j"=?W"h(\;c:Q28>\['UmWKm\k/&V9;It$Pe'GL
8P>kI,a>l3P"A<BR3\$.8WlY<UmWKm\k/&V9;It$Pe'GL8P>kI,a>l3P"A<BR3\$.
8WlY<UmWKm\k/&V:/qa)Wt;;Z'tV7q>Z3KpN?q'&P-f3_h-h3L/O`ADET(TkFQ^@p
>9,Aifl7!M='(%$1$E:/qjlY)6<O:ZJM/=/d-Q-I8Qo,B=hKgXccpV*eQ$&qd*^pO
UH(s:N')a,XCOeZr/.(9ea/"m24qF'M%C1@+dAqc&"$_Q/7dtDfo5(a(TCqer*4d`
?mj"+_s/=E6l/_g+1c_q7jpI#36T/SOIB4YB2*eBK%M5YfhlJB8.DhcN?l#*'J*/t
,,.t6&t#RH,pb*7JLX)RPS1sS%E1oX%E/IT,s\FBTLoMmVFZs"Jle2bRSoB7\oel_
;H"jhRSoB7\l+tpPa&hW.A\Ib9?L/$;O!EYV(&5i8P@3(RSoB7]VLuoPa&aWRSoB7
]VR'R.7m1T;OULJPe<hAV("u/b#4[+Pa&hW.A\Ib9?L/$;O!Ef.8c>+,r1^K,a+Tr
"`C3Z<NB:?FVhOjd$!;%`&9Sg]0;"sc%H]P%Sq\Mom`hX*8NV\hDG_^W)hfDo1bb>
FCNQ<*isMh<[5QW.&moEW,7]cV(*FJmR\tk.8\fk;RB@JP[utRC2%f3QVL`k!"1k1
mp'd0kte/D"gC>^j]9[BX"L[`LQ2_))(B*iDjO["BgQ)Y<9Z'8mMfUN%Fg[W.``a:
O[p-"Nens7,s\Gp&qZ72#:[1maXMk(b+"LJJjU/M#u4GlC/uW;Uf/P(,q5!C9?L/#
,a>s<.?[7qb#4WQPe<hAP"A<h;OJep]VR'?8P@3(R3\$0V(%R!9?L/#,a>s<.?[7q
b#4WQPe<hAP"A<h;OJep]VR'?8P@3(R3\$.8WlY<Vj.sZ;@5meF<);>HeY:2`mqnK
?WUqFbqOoAcY_$K)bhBI)XnNFj9ceUV2QFH,c^Dn=b+ncjL6O0ACRF1RrX*P.3NYZ
aC.,%8fX?]$<)P>'*=^13D:,dLGoRQWlQFBfWITAoS;#\HXV*V%jMjkL2F/1fVp#L
(.pL\AbaPZ3\&Eh$bGV1=55+HCq%>8HS;3YK]oL,@'H#[iY%naX0J2?6E8s1En2NG
b%.3V"J]uVOW9,:&r`b(187)A?rJKcRLiB=-\Tj0<0C(B,c)cN,mc"l,mcn1;Fs2O
P*D,+PU*(NPU-Vb8L4[08lA5I:m.'+:m<6%,a9S].7kfl6:t-I6;Wi0P#.AgV'M9O
#q8Fl#sq6^8O@Yn9-g)AKTqN0^@8b<WpBr0%ktN;8l"?>mCo\(gT-qXJJopW?KdC^
KeL[S-rl;oiJ]&i:m<)g0TZW<U]O.u$/nJi_Fe5C6C]>.+b3Go-qoee!i-//.UgEP
P"Mj?e+%GZhS9Hc1e/$LpOL[fA43C2nm,InMT^o8Di3Y_0hlOH01)r&iPk^:'oCH:
*VYm?B(,1.'eV&bOYOUIh2`m<2=BuF&7GjFfiY]6kAF]I9KGZKbu8ZuL*T2UKL42-
WMr3NNmrK6H>"V-=IWd+kpH%c;d4!@<M)i98L67&V6sIuP4Xo9>A@ABT1L\-,rN--
[9<-boTE-WC0O]18M<X]27B?h=nImLP#GS">?.:e01dHI[\^B7oTJj0;d4!@<M)i9
8L67&V6sIuP4Xo9>A@ABT1L\-,rN--[9<-boTE-WC0O]18M<X]27B?h=nImLP#GS"
>?.:e01dHI[\^B7oTJj0;d4!@<M)i98L67f'Xk%`P$X;DF>:"mN>G78l.G^%#YMgo
p7<%[-6&=AM:*TT=ol+-YMEDTPUPO,:^<)A$D`EYOg>Lr6C]>.WF6+l8chg%;UD!J
:C/I`:C5H@9OTYjRUhYC&ciUY6<'g1)(munG?+uL1;O$:"1i<.$VYb`\unJehc1,I
/0j,reu(6f>OKj/'BEE(T)=L-KlG^Rcq^]C3qck3li`k_5r%H$EY1(OQ=jo5j0L*e
C(MCQ\RlXRb'$S.1?UR3jQRT\`2nlGX5I8XA-"8C\[k=pf5]_8k-=ok?]Fd(qMPRF
H''iW;"23/gs1]mj0lrfnkUt6&f.DKCg'5Z\4bD!)nL2cWs<\g3O?pM56<!?RSSOa
qUbCpXGkA)<ciLHR,U>TqnFTr#\I[!DJpmm%gNSC_6L0,3c22g;Pko6=sjqE.1C,?
#Z\FlLQZ"WnlfNBaZnIkO@tr6IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@
IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbS
jL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1r
jHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4
P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@
IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#I_@IjDbSjL%1rjHnQ4P#L1o)rQP+
RQDsKU]QG,.4%:m8FD/\;5d/3E*4IUPU<5;qBZHr;T[?Y,q1+51aJpG9aN)AdS-28
.M+A)qDa"<YuX0pmUkLh^]?5G!X+]gVQ6K(6PgcOAo91C;Ub-%/AJ9W38VFf21'lL
"gTnOO&MS?cEkNA:qJo\/8;?U"p70_jZer[)#/p_rEmJ3>FIgG]sN#jU!Tq[L:4QX
h0p@D!-6&&9XA<4%/)O"q.]aCWO(sbhWp+g&jNB2-Zkkk@pSI%^Rpt(`&`V[4U^C1
i8n>0=@%I.*tT`*qQH<(?"<SVha8ka*(0BAa-^0+-Uu(PW^E3bc,::nY3VG=3#-*)
DE7?FY*Z]7&#6Ob@t,3A>D/%RTmcu.3,l=-X<9QsQP+#Vq^Prb$V/SN]b$I'SGrSq
KYG_o(6>8\dRqt`J(aa_q`g7joTJj0Zr<UjIjDbSjKq&q]d0^ZkP_$p0=1I+%nSEG
.nr&(!,(jqm,PoqH:`ES=t.ep5E]Adnld)t?BS?hF8jMHQeD;&LSU94Q)^AS!42JI
p4"B^kp>R?C8X;_r^hO1a^=\'oTHU\6gXeDI@Xa;PBpP,>%sc*FM?&(H<s0h?:e>"
U\8fDcfD;+?:fH7=t-0=IjDbSjKJDOr?SLEkP^oq-i5T!r?VB(9%-Obfn*RC$U`>K
H9j&]3WB(k$,4\#O/*E\]TT[$Sb@']QeBE2dIb)8H:_;>chfqi?YAq5*g0im<f2*Q
QrNWt=cCVD8aI3&='s.Y`Kd&i^0IOk'"H!fWI@8MM6Z$7bc8^d@C=j*-H"r^jdE^S
9s6/s`2u.,C;_KH?uBg$AF/bpk;N>?c.a`#'<#'Db[?61'p0K7U]U$g6;XMQ8[Q(]
_GI)'=sZeL0U*rNW4L!/ku+W[QAA>HGbDY<if=Eu[3NXMKABB`NtfJWGb`'W-Up@#
EgZ/Ep;!50O91'?S_7Ut$a)\UJk(&[Q3cOk1=TU)gu6a*lN6pOgFXukcF[=$FR>ga
o(2<1:;644Y.p^KU%2Ai)(m2U<%T],dcLcoE)*Fg@mP]9b>sY6HX,p,>XLJd4GNrE
a846a!)/li"Hj_erl("de+YPX-1`^PTL6`75>(IVh1YYl"Sa=V?FL_(W-,[Y?8E$I
\86=SciG'PnNR2VdeYjL8u1'(QT,!.SmZ_Hc7`,^'K*;IC%U/T=TEt7Zs3Jf4/lO2
-CmBL%r^Bo/+BCPSHfHg/Q4^,$*03T$#E%`qbg<4M/5Z8QIM.S@Vpqu;VI:qCeJ5$
e@)0K)\Uea[4S@,%`Ge#CeJM86a85!gJZagODIR!51I$:U`0s!O0LU]P_3FL&b[R(
P)sKQ@Qr;MUneqBfT!-fM(&qQq[n"Lg6.Qa:U(^NIAnY2`;:-iVqR;qlq:eGe@)0K
3tg2*[4S@,#/mqpm7ju7+kW+!D5hAD9X8Z+ONj\p`F<D#97\^s:VgrS.>K)m7`[:f
jT[nK-WUq-nuZOIL!jgJ\H&RuCj0p9pET*M#iP&SR_"u?[pN5.<rU!mJ&-en:W*.H
JMHMQ-/B5\_!t>$YWPcQ:W*.HVD*!['nk>&ACS6!O'(mK4]]J9-!kIA38okoOTflf
)@+A7O(?Z+k'a]jrr>Nt+-L!m.l^rZ's"6CV(OD)E;6tnA*P`.[D+RBddiII\.=*n
Eh+g,Xq9b+O8IP=quUlcl0iE6c!O.:*(RTM6VMU%#Nrkj89EWqh<3ctU/X]VcZINL
4/R,koVlVeM,6?"ViELtrr=l+/gtTcg$X_<Ra/derr>>kS9mSR`l83O/-l$F*R^TY
ZD:s0RXM8Np])"l_GH+*Kch%ZS-5(`-\Uu\&5*j4'VRW7L+nqD-r1-qL=EZ2_GHD_
D+eUh,mc"AeGE5(-qR)jVV6k56:sbU/Z=bq,c#cbg8>6D8k01SS0\Ij*$kr2PTkhn
PUSpqP*j*_V$TI\@gV*d&qgt='>ft[#q:f\Kd]P+9-(!K;hUhj0\ViC3(af^%B42C
K^b.dKcl`d+;$s!81"[/+I0g*9G<'na;!Se:(g1`djIFR:74.8?W<jW8L[').FSuq
`2JqVU/=hjTL'e/,UA%2.$gThR"SG"C/Cf7Td;FHn=C<18m2nF:n8ma$/mp:.;2K`
iB/B_0V/rpFHjcXKd]_&.?#P[:m<6&0U+"Q:m.24:o+Ib8n/1$:(orD@gSi$&qlLh
'1.jq8P;B`;M:33(ePL*8P;BHSN9AH&qoN.,qTEiPU-VbBM&u%KTrhi$;cs0VD+5`
6;WhKiCGAN+Ioj$;?907KG(d$_I/o;Y,%ef&lOpHP"A<BP"7#n,a(bt@\#q6.&`CV
`>(*VLf.)!.>^nOBp(gh8edI5V34T:8m+2H,c)jh+Isf-3_@0q<$_k!8LfCe3_:c6
:C5u.8P;B`;M:_i0nc5]8L]TF;G<7>9V!Gj`Y0dJ.&ga?8L5pY,a)&g8N9:6K]sjU
8kKbMkTsn<#q&;;6?l946:tB/;Fr/l!g$7d5o$JQOAQ?N,d%fX$.)T7_I/lZQ-r5L
'ZhV`8P2Q"P#@Jk9Tk]8;l1umAApQ&;,\1O75@DCP'"dEA<KM1.6:$'Pe(tYdSb[[
@%@G"3_@1\<$t6_PbaI6"Xt^[8P:>",ZM`<P%9fr16Q+0R&$9.-s8<GP"Jk&P"A<E
9G<)D\k+7T.7qr_P#S"c$.;_78L,"GPJVF+dS^C'FQ>%gJr5X]98+Z'Uk2YS_I/lZ
V:%p\'ZhV`8P2Q"P#@JXl&&)90i",_/=<>/;,Y@gEg\1(R&<VT;NiJ",q1+'UnoG1
,S[h/P&uk_kpK%p8L0BqksBKS;UCh'0hG"`P"7$2R5mruQ77]5aXLcBdj0X)8JI:b
ajVV/8dWro8P>rfPG"c$VG<:U$.C7f8ktICP*D,$,c6r(P'#b681%(E;W128.3Onm
E1&[W9;I_A.?[7JP*D,$,c)h:dhJ%PAE>R==Yb*?WFD8U9Tg/bSMDZm8L0I`SMG;O
\j7Tn$=o\_E0=9/dfena8]##s"YPs0,c)cL8L\2lb%-aBAL/$iYtUrm;GtW#VF_.@
SMDZm8L0Ic:74-M;KU%/9'T"u8L\bE8Hg^[V?t[KPGV*<RVC4u:.!o!9UmB)_NK^Q
5qAi>PD#138LHesUln:u8L0Hk;IZ1O8P:C*;^A3'-VTD`.?g"<+_8^D,,HQJ8L[6[
-V6t,&kF.B8^f%Y.tm/=FHiT[13=5A8L0I`P"?pqMIbg(8lCP0A5og2;CX+EABE:G
KdKQ_,q1+&78'OPSL#^V77dWbSMG;O\k+0!QO2+g8P>kB8L^O-13DS0'841]8P=a`
&>XnZ:(nu].<L_E"YrXpP#@H7,a>+D3b"8<9UqtO9.!E%'eE92.?[$>PGUc@8L0Hs
PGV*<QUiB`5tmK>:6JZbdfena8^f%Q9;I_B.7keJ8m%rc;^A1fW?t&,'bqpeP*Se4
1.Y;Rl&nr-8L.9HFNMs/Pa#./9'OeP8P>kB81AZFPGG&'8L0PL:74(:6K'mt'82U[
;Gdcl-$8*$E0?PZ,`kqMP"?rK,a(_k9N.f;.:gQCA<aB1l&el_13/d./=AP0PbaI6
'e)1Skp^_+8H]aL3b7J$E1Jb+'VsuWUnuL2,a>*f8L5od-Rk3VPZ3hjV2C.m;+XD-
:73@V13CVe8L0HK>rlN[.8!2^8L\VK-;G1Gkp2E!>rlAa,qb?P,c7#PajZ?]:(mch
,q]mr6BVX\3)#hfV:%pr$=+p?8P2Q"P#@JXl&&)913CVeABE:EV2AgF1.YP'FNGt'
,a'WTFNMs/kld.T.?\epdRrcQ-UC@"R7S\R,a(_k8L0Hs`A2J%,q28S1+HD)W>-,3
Z=N3_6B`cjMNj8q,c/te:4e_+U83s=:(nu]-$5;A"YLIc$.;`9,a(c6VbEXA$\[Im
:(gI`8OP!MQ,7L--OD5Dl'%d:dRb^KUln:q.5=SbUns8&.?[TNPGUcA'ZnL.OKrE]
P#@H7,ZLT(PGG&'#p^'\,jCMgQ,7XZ3XScJMNUS08L0I`P"?pqMIbg(8lCP0A5og2
;CX+EABE:GKdKQ_'e(Dk8P>sTSHUH677edXS0guD9'IUa$="rPSL#nO8L11%FNN!n
\5!\?i?^)jPX:N>>UKi0E0?P_R5t[\,a(_k8L0HsP8*8=8m*oiR3aDP3b23p9UqtO
9.!E%'Ib;j8P2aF-V6t,&kF.B8^f%Y.tm/=FHiUJ'dOKhP"?rK,a(_l'ZnL.PbcFM
,c-BUP):_l13CV]8X$#?8kC:k;X)XX8P2lX;F*sR$'V0MdRb\uaX!$@9;I_B.AiXk
FQ>%fKY]W>98+Z'Uk2YS_I/lZV:2;:JsT%SP#@H7,a>+D3b"8<.?g"<.:gQL,,LJN
9Tk]5,`tF8,a(br:7*D#9;E1k+Jq`Z-V5hAl%4#AV'Qj%'Vpm`,q1+&8P9c>b%-a4
ajVH1PZ3lF;TY-"8IA.^1+H0n,a+KhR6!r<P)>D0>UN2YUm9A",S\?GP"A<BP"@+"
SMG<J/e`oS3(Zbs,nQl(=&'DV#q9u\PG"c#8L0OrP"?rK0i"+3V2AgJP#BDcVF=-)
:73CZP"?pQP"?ouTUdc3P*\]bO?lR(VG<:U$.B%@.8!2^8L[4VP"JVD,a+HBPEa0<
8X$#C9.6&O'NDAKl&nAs-VTD^P"?pqe##llPbb%LP*ZL("Q:W/P"?dn8L0Hk>pPS)
9f2*uV]g#L-4.O]>U_(T,SI\-R5dc2V];R/&5qa<P"JVD,a+CZVbBudaciSn9.!E%
'eGb6A<aAk,a&p7,`tuVE0r!Z.<L/5";Js=AEbCZSM3fjPbb%LP*D,$,c)cL8L\2l
dj1b::73CZU7F%h=X9/%$RSW:'e(Dk8P>sTSHUH677edX';c)Q8R3U)5tmG5,a>l3
,a+U1f?G`l+o5Fk$g)Po;tS./?SWmY?`+Qko+FVDqKY&-0I27BW"NGjUlq@K&mm;f
P+SZd(%VJu.Je<Fq2$A]rA^1JR1_qadn,nMaX!eKKU9pI,_tW+Qd#g\Vs//kI*RmI
I[NqIbc)__l*Td=1m1N(kYAj#8Hh=S.5.%98PdhB0:1*Y:Xf\(QdSH$e*34C.3thU
jNH[2P#M#4MYWM_<;eS8q3`Lir@jXed#ol-QUuSOP"L1j:;1=3"[>\[0:<GE0@Pcp
q2$A]rB-8=Kd7B25a(qk,aA6oP50AKPlCa`fa7~>

n
Q
Q
Q
0.9451 0.91765 0.86667 sc
350.602 189.298 m
/N10 18.1953 Tf
([lumi\350re]=[vie])
[10.9173 10.9173 10.9173 10.9173 10.9173 10.9173 10.9173 10.9173 10.9173 10.9173 10.9173 
10.9173 10.9173 10.9173 10.9173 ] pdfxs
0.18431 0.24706 0.31373 sc
368.573 125.729 m
/N10 7.8232 Tf
([cliquez ici]------)
[4.69319 4.69319 4.69319 4.69319 4.69319 4.69319 4.69319 4.69319 4.6971 4.69319 4.69319 
4.69319 4.69319 4.69319 4.69319 4.69319 4.69319 4.69319 4.69319 ] pdfxs
454.867 133.337 m
/N10 [0.0 -7.822 7.822 0.0 0.0 0.0] Tf
( ---->)
[-4.69325 -4.69325 -4.69325 -4.69325 -4.69325 -4.69325 ] pdfys
0.20392 0.26275 0.33333 sc
435.965 94.136 m
/N10 8.5198 Tf
([allumer]*)
[5.11193 5.11193 5.11193 5.11193 5.11193 5.11193 5.11193 5.11193 5.11193 5.11193 ] pdfxs
n
494.324 34.822 m
494.303 34.822 494.286 34.814 494.265 34.81 c
478.99 34.81 l
478.99 41.84 l
478.99 41.841 478.99 41.842 478.99 41.842 c
478.99 42.127 478.759 42.357 478.475 42.357 c
478.191 42.357 477.96 42.127 477.96 41.842 c
477.96 33.956 l
494.324 33.956 l
494.562 33.956 494.755 34.15 494.755 34.389 c
494.755 34.628 494.562 34.822 494.324 34.822 c
h
508.437 41.409 m
508.437 41.649 508.245 41.842 508.005 41.842 c
489.716 41.842 l
489.477 41.842 489.283 41.649 489.283 41.409 c
489.283 41.17 489.477 40.977 489.716 40.977 c
495.326 40.977 l
495.326 33.956 l
496.355 33.956 l
496.355 40.977 l
508.005 40.977 l
508.245 40.977 508.437 41.17 508.437 41.409 c
h
514.251 38.59 m
513.943 38.59 513.652 38.505 513.409 38.356 c
513.157 38.225 512.951 38.009 512.82 37.775 c
512.801 37.775 l
512.801 40.602 l
511.977 40.602 l
511.977 33.956 l
512.801 33.956 l
512.801 36.69 l
512.801 36.848 512.81 36.971 512.857 37.082 c
513.016 37.532 513.428 37.906 513.961 37.906 c
514.738 37.906 515.009 37.298 515.009 36.558 c
515.009 33.956 l
515.833 33.956 l
515.833 36.652 l
515.833 38.215 514.86 38.59 514.251 38.59 c
h
509.89 37.934 m
510.339 37.934 510.648 37.822 510.844 37.72 c
511.032 38.346 l
510.808 38.468 510.376 38.59 509.89 38.59 c
508.411 38.59 507.457 37.569 507.457 36.175 c
507.457 34.78 508.345 33.854 509.712 33.854 c
510.32 33.854 510.798 34.012 511.013 34.115 c
510.873 34.733 l
510.638 34.631 510.33 34.518 509.862 34.518 c
508.963 34.518 508.289 35.164 508.289 36.212 c
508.289 37.158 508.851 37.934 509.89 37.934 c
h
506.417 38.487 m
505.593 38.487 l
505.593 35.716 l
505.593 35.556 505.566 35.407 505.519 35.295 c
505.369 34.92 504.984 34.537 504.432 34.537 c
503.693 34.537 503.421 35.126 503.421 35.988 c
503.421 38.487 l
502.598 38.487 l
502.598 35.838 l
502.598 34.255 503.45 33.854 504.162 33.854 c
504.966 33.854 505.453 34.33 505.66 34.695 c
505.677 34.695 l
505.725 33.956 l
506.455 33.956 l
506.426 34.312 506.417 34.724 506.417 35.191 c
506.417 38.487 l
h
499.359 34.471 m
499.35 34.471 l
498.554 34.471 497.993 35.22 497.993 36.212 c
497.993 37.073 498.414 37.972 499.378 37.972 c
500.351 37.972 500.736 37.008 500.736 36.24 c
500.736 35.211 500.146 34.471 499.359 34.471 c
h
499.406 38.59 m
498.162 38.59 497.16 37.701 497.16 36.184 c
497.16 34.752 498.115 33.854 499.332 33.854 c
499.34 33.854 l
500.417 33.854 501.587 34.584 501.587 36.268 c
501.587 37.644 500.708 38.59 499.406 38.59 c
h
494.324 35.255 m
494.324 37.959 l
494.324 39.514 493.349 39.888 492.722 39.888 c
491.974 39.888 491.45 39.467 491.224 39.045 c
491.207 39.045 l
491.16 39.784 l
490.429 39.784 l
490.458 39.41 490.466 39.036 490.466 38.558 c
490.466 35.255 l
491.291 35.255 l
491.291 37.988 l
491.291 38.118 491.31 38.268 491.347 38.371 c
491.496 38.83 491.917 39.214 492.451 39.214 c
493.228 39.214 493.5 38.596 493.5 37.866 c
493.5 35.255 l
494.324 35.255 l
h
487.234 39.27 m
488.207 39.27 488.591 38.306 488.591 37.538 c
488.591 36.509 488.001 35.769 487.214 35.769 c
487.207 35.769 l
486.41 35.769 485.849 36.518 485.849 37.511 c
485.849 38.371 486.27 39.27 487.234 39.27 c
h
487.187 35.151 m
487.197 35.151 l
488.273 35.151 489.443 35.881 489.443 37.566 c
489.443 38.943 488.563 39.888 487.261 39.888 c
486.017 39.888 485.015 38.998 485.015 37.482 c
485.015 36.051 485.97 35.151 487.187 35.151 c
0.71765 0.76078 0.79608 sc
f
0.56078 0.61961 0.68235 sc
279.643 63.689 m
/N10 5.7136 Tf
(* Par cette action vous envoyez un )
[3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 ] pdfxs
279.643 56.8321 m
(message au serveur LonTouch. La )
[3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 ] pdfxs
279.643 49.9764 m
(demande sera ensuite achemin\351e )
[3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 ] pdfxs
279.643 43.1195 m
(vers le noeud lumi\350re reli\351  sur )
[3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 
] pdfxs
279.643 36.2637 m
(LonWorks.)
[3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 3.42819 ] pdfxs
0.003922 0.007843 0.007843 sc
%ADOBeginSubsetFont: BGNAAA+Myriad-Roman Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /BGNAAA+Myriad-Roman def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1992, 1994 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) def
/Weight (Regular) def
/ItalicAngle 0 def
/BaseFontName (Myriad-Roman) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-46 -250 1126 831} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 0 674 685 484 496 650 661 710 721] def
/OtherBlues [261 266 -200 -194 -221 -212] def
/BlueScale 0.0604583 def
/BlueShift 7.1 def
/StdHW [67] def
/StdVW [88] def
/StemSnapH [67 73] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B896187A> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[/N18/BGNAAA+Myriad-Roman 1 TZ
127.113 15.016 m
%ADOBeginSubsetFont: BGNAAA+Myriad-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/BGNAAA+Myriad-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF
0E48D8A711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12
CD842E> |-
/a <1C60D8A8C9B75946039FC5B56ED6A5087B2F0B1630F4B83F01E3CEBCE482
B366633F5D4F2D1210B8096336DCE594268DC8CBC788AC277818F4265A158323
040A081AF2813A4C46853024307C79D63531339CB7A33AE1B19A9EBE155A9044
AF94E2AB014EF5F3C3F84453DB645AE8DB251FAE462208E18C764287E4C503E5
D539A89B66BE752516C9BD24116E70C150AAE316110E44DAC51B50A5E6719041
345788BD574DAE6197556A3E98> |-
/parenright <1C60D8A8C9B84E0A47D7FED609B3683507871E5C5015DC3BFD2
5D11DFBE5B3FA44F36583D8E95C05293FC4D90FCF65F5DE156533A2E5AB895EC
874E28F> |-
/b <1C60D8A8C9B7E2CE503F0CE2BF2217B1D594F36B5D1490FA7885016BD046
340F1FB99D9BA4708CD75FCACB85799AFA1CAD5D8CD2DBC61075F9D2BA19770B
5C23A3E11529A29AB61122F881B8B2E4181E296393C2A67D3C0B7AAB2AC5355F
BF9B35ADAFD078204A198CD997C62D7A0794E85F2E4A8B7286BAC7793EA612AD
D77A8F2F7071668FC2DD06E9900C61E75D4371C9F0B2C94F84D7F13BA3A4E134
88841CA2EA23587A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/BGNAAA+Myriad-Roman findfont /Encoding get
dup 40 /parenleft put
dup 97 /a put
dup 41 /parenright put
dup 98 /b put
pop
end
%ADOEndSubsetFont
/N18 12.0 Tf
(\(a\)\(b\))
[3.40916 5.78514 264.194 3.40796 6.8292 3.40916 ] pdfxs
n
0.92941 0.12549 0.14118 sc
171.300995 92.719002 44.277008 8.195000 rectfill

Q
/JOXAAA+LetterGothicStd /Font _pdfUndefineResource
/N10 /Font _pdfUndefineResource
/BGNAAA+Myriad-Roman /Font _pdfUndefineResource
/N18 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
