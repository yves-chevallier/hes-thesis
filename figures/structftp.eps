%!PS-Adobe-3.0 EPSF-3.0
%%Title: (structftp)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 18:15:53 12/21/05
%%For: (Canard)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 795 507
%%HiResBoundingBox: 0.0 0.0 795.147 506.616
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 25713 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreateDate>2005-12-21T18:15:53+01:00</xap:CreateDate>
         <xap:ModifyDate>2005-12-21T18:15:53+01:00</xap:ModifyDate>
         <xap:MetadataDate>2005-12-21T18:15:53+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>164</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgApAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7drfmPyb5R8vadfa5a8L&#xA;WaIL60Nm9wF9OAzOX9JH4gRozb9gcwwCSxUJvzK/JyAMZtY0uIKodi4Rfhb06dVH+/kqO1d++PDJ&#xA;UPdfmn+VEAgKSR3S3KXckDWto8wdLBBJcOnBDyVUPKq7Eb9MeEqm/lLzR5G82Pfx6NCskumOkV9F&#xA;NaNC0byAkKwkRfi+E1HUfSMBBCsh/ROl/wDLHB/yLT+mC1d+idL/AOWOD/kWn9MbV36J0v8A5Y4P&#xA;+Raf0xtXfonS/wDljg/5Fp/TG1d+idL/AOWOD/kWn9MbV36J0v8A5Y4P+Raf0xtXfonS/wDljg/5&#xA;Fp/TG1d+idL/AOWOD/kWn9MbV36J0v8A5Y4P+Raf0xtXfonS/wDljg/5Fp/TG1d+idL/AOWOD/kW&#xA;n9MbV36J0v8A5Y4P+Raf0xtXfonS/wDljg/5Fp/TG1d+idL/AOWOD/kWn9MbV36J0v8A5Y4P+Raf&#xA;0xtXfonS/wDljg/5Fp/TG1d+idL/AOWOD/kWn9MbV36J0v8A5Y4P+Raf0xtXfonS/wDljg/5Fp/T&#xA;G1d+idL/AOWOD/kWn9MbV36J0v8A5Y4P+Raf0xtXfonS/wDljg/5Fp/TG1d+idL/AOWOD/kWn9Mb&#xA;V36J0v8A5Y4P+Raf0xtXfonS/wDljg/5Fp/TG1d+idL/AOWOD/kWn9MbV36J0v8A5Y4P+Raf0xtU&#xA;LqulaWNLvCLOAEQSUPpp/IfbEFUq1S0gv9L0vT7q1tLu1ltWeSK8g+sJ/dLCaKWQfFHO6n2OVZcp&#xA;huG/BiEybeZap51/JKVbq31GHRZZLeSaKe2k0iZm9QSKsgG5B5PbpvXsMInl7mzwsfeUVD+Zn5R6&#xA;bbJb2s+lQWt3bsvpw6Vcqhtr5VlcMF/YlAUsv3jY0HFlPRfCx95TPS/zn8iw3KaVp+p2VvPPdCL6&#xA;tHp9zH/pFzLxBNGA/eSON/femAnJV0vg4+8s9/SGtf7+tv8AkRJ/1Wyn8ye5s/KR73fpDWv9/W3/&#xA;ACIk/wCq2P5k9y/lI97v0hrX+/rb/kRJ/wBVsfzJ7l/KR73fpDWv9/W3/IiT/qtj+ZPcv5SPe79I&#xA;a1/v62/5ESf9VsfzJ7l/KR73fpDWv9/W3/IiT/qtj+ZPcv5SPe79Ia1/v62/5ESf9VsfzJ7l/KR7&#xA;3fpDWv8Af1t/yIk/6rY/mT3L+Uj3u/SGtf7+tv8AkRJ/1Wx/MnuX8pHvd+kNa/39bf8AIiT/AKrY&#xA;/mT3L+Uj3u/SGtf7+tv+REn/AFWx/MnuX8pHvd+kNa/39bf8iJP+q2P5k9y/lI97v0hrX+/rb/kR&#xA;J/1Wx/MnuX8pHvd+kNa/39bf8iJP+q2P5k9y/lI97v0hrX+/rb/kRJ/1Wx/MnuX8pHvd+kNa/wB/&#xA;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&#xA;004xBsuDrJCUhXci/ryf74uv+kW5/wCqeZPjQ7w4fCUrllkOvC4FrdmH6r6fP6rcU5epWn934Zia&#xA;qYlVFztFIRu9kZ9bH/LPdf8ASLc/9U8xHP8AHh3u+tj/AJZ7r/pFuf8Aqnivjw73fWx/yz3X/SLc&#xA;/wDVPFfHh3u+tj/lnuv+kW5/6p4r48O931sf8s91/wBItz/1TxXx4d7vrY/5Z7r/AKRbn/qnivjw&#xA;73fWx/yz3X/SLc/9U8V8eHe3aF3TWpTDNHGbKNVaWKSKpX1yQPUVa05CtMEnC1UxIikfYfWPqNv6&#xA;P6Q9H0k9Pl9R5ceIpX3ph9Hm4yv/AKb/AMv/AP044+jzV3+m/wDL/wD9OOPo81d/pv8Ay/8A/Tjj&#xA;6PNXf6b/AMv/AP044+jzV3+m/wDL/wD9OOPo81d/pv8Ay/8A/Tjj6PNXf6b/AMv/AP044+jzV3+m&#xA;/wDL/wD9OOPo81d/pv8Ay/8A/Tjj6PNXf6b/AMv/AP044+jzV3+m/wDL/wD9OOPo81d/pv8Ay/8A&#xA;/Tjj6PNXf6b/AMv/AP044+jzV3+m/wDL/wD9OOPo81d/pv8Ay/8A/Tjj6PNXf6b/AMv/AP044+jz&#xA;V3+m/wDL/wD9OOPo81d/pv8Ay/8A/Tjj6PNXf6b/AMv/AP044+jzV3+m/wDL/wD9OOPo81d/pv8A&#xA;y/8A/Tjj6PNXf6b/AMv/AP044+jzV3+m/wDL/wD9OOPo81d/pv8Ay/8A/Tjj6PNXf6b/AMv/AP04&#xA;4+jzV3+m/wDL/wD9OOPo81d/pv8Ay/8A/Tjj6PNXf6b/AMv/AP044+jzV3+m/wDL/wD9OOPo81d/&#xA;pv8Ay/8A/Tjj6PNVC/8ArH1G49b9Iej6T+px+o8uPE1p70x9Hmr/AP/Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:58ACF6704572DA11AE5B868CC1F4A33C</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:58ACF6704572DA11AE5B868CC1F4A33C</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b5aaeb9c-21da-4246-b543-eefb67d22fdc</stRef:instanceID>
            <stRef:documentID>uuid:3747B3973D72DA1190E0B3EFEBFBB1BC</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">structftp</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Canard</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 795.147 506.616 rectclip
/N12 [/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/ColorSpace defineRes pop

q
0.0 0.0 m
795.147 0.0 l
795.147 506.616 l
0.0 506.616 l
h
W
n
n
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/E11 exch /ColorSpace defineRes

cs 0.96863 0.97647 0.8902 sc
0.566890 0.567000 794.013000 505.481995 rectfill

q
n
0.0 506.616 795.12 -506.556 re
W
n
2 J
1.134 w
true setSA
n
0.56689 506.049 m
0.56689 506.049 794.013 -505.482 re
0.003922 0.007843 0.007843 sc
S
Q
true setSA
0.003922 0.007843 0.007843 sc
%ADOBeginSubsetFont: ZWMBAA+Arial-BoldMT Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ZWMBAA+Arial-BoldMT def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/BaseFontName (Arial-BoldMT) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-628 -376 2000 1010} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[/N10/ZWMBAA+Arial-BoldMT 1 TZ
13.8467 479.624 m
%ADOBeginSubsetFont: ZWMBAA+Arial-BoldMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/ZWMBAA+Arial-BoldMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/T <1C60D8A8C9B7D8BE19809EC35BBBBC4A9DCDD5AC6ABFFD5901D001A83F8C
D3372E99> |-
/h <1C60D8A8C9B7D8BE30E20DCA6EE6AB6CC3B52F6392A45738EC6E57C5FD4B
5006DD4CC13130165A71E6C8AD32848FD70F464465300BAF67B8EDC5E52749AF
8D970E7EFFDCC8EF63F6AB31364E59004A6FCF5A143C0BB48A0AC6C4FDED1312
DDD5BAEDEFE14256E656A094680FE5979938> |-
/r <1C60D8A8C9B7361F02EEC91E54B85D1C77E667FE2BCF3D09A421FBF63CB6
30EA2A0B7B19FFD8078B4DB5A7731C633809BCAB3FF296D65B89F29DE6B6DB35
AA635F12FEC0F1664A8FB613C79352FA72> |-
/e <1C60D8A8C9B7EF322BF270AB151730C1576B3DBF6DAC6B05EF7C7C2AC355
0E4D7D76EEB5EC00E2AE0B63EA674701E41362C9EF4C943E6044930A81C0288C
730E9CD4222EC82D37FE43450E9A846C17FEBAA9742B3180B655FFA4E0E014EF
214E09E7DE6E45A7476C6DEA21B47E198DDC2AD648DA39E6CBF2981071855AA9
4524E4E0809AB2B25573430347DD> |-
/a <1C60D8A8C9B7EF322B767253CD3BE18E6883E9BFEE680E471A3E543E6B62
9FFE599C78BF6E9BC360B4FD3F4193BE88F8A133134BAA650EBC31A9DBCA73D4
43463241F1A95A036612031AED6950283B0D14D29C497685C55C7946BF118B40
E370FC30C35C6DDC0B89863AEC8E7000DED8B394346462262BD43999923C02BB
76E45D38F5FACA7247DBA2EBA6371EEFDE7DB20E4C849532AD601D5FE565E2F9
524F3166F0EDA1C9CBD6F2D9FAE6CBD991E5FC9CACD3E5ACCC612FA46CAB6837
78C9E93119C2E309BBBA2FB6B108D4ACC24630A4E27912F2F48E37DD6F256C92
0ECC30772CD6DD1CCCB84D330E3FAA> |-
/d <1C60D8A8C9B7D8BE1937528A8A04A3F08B6D80EAB145BDD9DBE53FB1B70A
6DDBF10422FFF8F4C48F788DD104B24EA5229392446A977753676010F4776395
4952B19E372D9318BC5C7A48B7A85FDEA74862756E58887CA2F53B9D7C319DD7
A84656FBF89C0C66533E86D0B18AA2C13EC41ADA69D4E07EF68978C6DC11D8A9
705A6EC736D21DD4607DF3> |-
/space <1C60D8A8C9B854D00D> |-
/F <1C60D8A8C9B7D8BE164A384446DA6B7BAA798AC9D25A30491D373B778ABE
DC450E08B3A2A56A100F> |-
/P <1C60D8A8C9B64EDFF4BBA9405C68CB1D32394A0B35B38FF15650A7F4CA98
0D304B0E82F2EE31DE1B207C9690A7D1CE7998A46A2671A721A2721266CDB3CB
7162FB8735F8901B59D497FC48B1C8BA82BBC82DEF38A7FA67F275089B99C047
F77478B3299CF33148E1E790C5C7235CAB593CF69659FDEE7364A65AC06E6296> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ZWMBAA+Arial-BoldMT findfont /Encoding get
dup 84 /T put
dup 104 /h put
dup 114 /r put
dup 101 /e put
dup 97 /a put
dup 100 /d put
dup 32 /space put
dup 70 /F put
dup 80 /P put
pop
end
%ADOEndSubsetFont
/N10 [13.0166 0.0 0.0 13.0155 0.0 0.0] Tf
(Thread FTP)
[8.22509 8.22509 5.05184 7.17475 7.43508 8.22509 3.45981 8.22509 8.22509 8.95422 ] pdfxs
n
1.0 0.87059 0.67059 sc
13.849000 13.848000 767.447021 458.200989 rectfill

2 J
1.134 w
n
13.849 472.049 m
13.849 472.049 767.447 -458.201 re
0.003922 0.007843 0.007843 sc
S
%ADOBeginSubsetFont: HLEAAA+ArialMT Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /HLEAAA+ArialMT def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/BaseFontName (ArialMT) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[/N11/HLEAAA+ArialMT 1 TZ
27.1284 457.387 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B7EF322B32790B4C40581173F160A628925C2B3464303D1D06
742E51EAF8B24CA2240525B9E37D08039C077561F794D203DE8C21652F0F5A81
A2CE84BC5F560E6CA22CB86602E80E4BBDAC611F34E85189D165B97A2D648CF6
26A92F4026AFF0CA38E8E165B7E956CB11B132485900857B09AC55401998CADA
1EAAF79B76AA2B52CCF0307B360E6D> |-
/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A98
7875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C
7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79
F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F
518C54BB58C51D6FB6D0C8> |-
/u <1C60D8A8C9B7EF32240889FE90FF09F794E92023A18223CCBE3629AB7F51
7D090BF7D55C0A5A8EADD9BE381137FE8504E8B2DB3D16839889E327241ACA8F
992A2BB9AD2BCE57ADB306CE2789439E67A64C32BE8669C197F5851EE3879399
0906DA8D7F8ACFF6D70790F06B02> |-
/c <1C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDCE
9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F7
BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148C
344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D3654
8FE63FC8465B1B685766E782F0> |-
/l <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-
/e <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0
D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B
6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA
03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C3729
5284C077711C162623860AACA404F650F8D516970257> |-
/space <1C60D8A8C9B854D00D> |-
/p <1C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B964
70F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F436330D
C4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F556
CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672C1
E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |-
/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE11285789
4FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619AD
D420F549AB7C795751D32E8EE6> |-
/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B17
1C8A80AB> |-
/n <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C
0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDAD
E9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A520
3A8015DD09B7CE> |-
/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7D
C8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA
6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA
48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD
710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CE
C10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53
463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2
879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177
B5D88A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 98 /b put
dup 111 /o put
dup 117 /u put
dup 99 /c put
dup 108 /l put
dup 101 /e put
dup 32 /space put
dup 112 /p put
dup 114 /r put
dup 105 /i put
dup 110 /n put
dup 97 /a put
pop
end
%ADOEndSubsetFont
/N11 [9.2976 0.0 0.0 9.2968 0.0 0.0] Tf
(boucle principale)
[5.04952 5.31079 5.04952 4.77897 1.86045 5.31079 2.39692 5.31079 2.92867 2.12078 5.05045 
4.77897 2.12078 5.04952 5.04952 2.12171 5.04952 ] pdfxs
n
1.0 0.96471 0.91373 sc
27.131001 429.549011 754.164978 20.984985 rectfill

n
27.131 450.534 m
27.131 450.534 754.165 -20.985 re
0.003922 0.007843 0.007843 sc
S
40.417 435.872 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/O <1C60D8A8C9B6FF86E621E1FAD9CC02A23AF5AAF7451327A9277DAE8170AA
C8E603A02E3EEFF561DDADE9FD6F6F16B77EE709DD797791A73F1C532C58482F
9C51E1EAE7EA6E4D820E6AA1026E7BE345B1C97C5D9EBBEF4840C4188F96B538
0E7625249BBAD172254404F6F1CB17CABA1F131B17AAAB56C5D3B94E3AC2C2E9
F0A0D079C435D0249DF6C47E18FCF00E7FFE3C519BB35DF797EF47286BDCA762
289BE1> |-
/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D06
5152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CF
AD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F
5C42C88FB43C> |-
/d <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D96214
58876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6DD
52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB612
941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF13
CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-
/m <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519AD5
BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD99
C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176AFB
9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D55C
54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE37B> |-
/x <1C60D8A8C9B7A73DB920A1A3B81DE7234ACAA5546B4C65820CF3C50E1629
C5A6423BAA34A2ECA8C7FE4B71726AC6704CC23AF1725AFB30D2892FC1BDDAFE
AD7BE7BD65F1051699CCF4B0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 79 /O put
dup 116 /t put
dup 100 /d put
dup 109 /m put
dup 120 /x put
pop
end
%ADOEndSubsetFont
(Obtention du mutex)
[7.17589 5.04952 2.64796 5.31079 5.05045 2.64796 1.86045 5.31079 5.05045 2.64796 5.05045 
5.30986 2.39785 7.17675 5.31079 2.39692 5.30986 4.52979 ] pdfxs
n
0.86275 0.90196 0.96078 sc
27.131001 13.848000 754.164978 415.170013 rectfill

n
27.131 429.018 m
27.131 429.018 754.165 -415.17 re
0.003922 0.007843 0.007843 sc
S
0.567 w
n
27.131 429.018 m
385.486 396.612 l
385.486 396.612 m
781.828 429.018 l
27.131 396.612 m
781.828 396.612 l
S
366.887 414.356 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B6B41CBB4B6664BFFC865F56E6FEAFA79E7B90883C1C68AFB3
79AC174B0F8DCC9294E2C26BD06BBA9FD3867F8768651EF4BA798B4F538FCE8F
80AF5A83421F8F> |-
/s <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F
80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2
BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD9
6538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1
B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB32
87CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B843
5558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F41
72D53C8FCAF4D28F2B78D3A4BF03> |-
/g <1C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817A0
65D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D55
9B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0C2
47BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667DC
9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FBD8
8F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF57
5C72F67F4BEBB98F8AFA57505EC9> |-
/question <1C60D8A8C9B7EF322BDADAEE502DF3AE0FECDD8EC2359000CDC88
12CFDC0DE8BCE9BE2709277FED08F574A154D60618EA2BF10B86967F632E7A54
6B774DBBF216CD6058F0168D1C71D6326ED02FD5A640B28735D6F71E469DBFF4
78B5476B7B36CA454868B01ECB26C9350D293E12F72E7CCCCD26D7EF4640A9AB
F47FF32C25092C62E13580A2BE00A4F3C34E0DAD4998F4893058707E35783A65
97C896BF9D9D20F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 77 /M put
dup 115 /s put
dup 103 /g put
dup 63 /question put
pop
end
%ADOEndSubsetFont
(Messages en attente ?)
[7.70764 5.04952 4.77804 4.5177 5.31079 5.05045 5.05045 4.77897 2.64796 5.05045 5.05045 
2.64796 5.05045 2.64796 2.64796 5.05045 5.05045 2.64796 5.31079 2.39692 5.05045 ] pdfxs
32.4439 403.466 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/v <1C60D8A8C9B7A73DB99D94C9412F55B03E92C174A4755E69F97C27D9162B
37724F74F272B140D258652D102C2EAC46833C73F9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 118 /v put
pop
end
%ADOEndSubsetFont
(vrai)
[4.52328 3.17971 5.04395 1.93855 ] pdfxs
758.94 403.466 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f <1C60D8A8C9B854D0F47057B2F13303E258FCAEE9E8BBA6E28AE872907C56
63BFD2A0F535ED0EB011F2C2A875E053FAF73E8AA16B1F99510A6812F90D61CF
3F1DA5EF558899A9AE12AAF6AF4568E0F6003B0A2FF6F33293> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 102 /f put
pop
end
%ADOEndSubsetFont
(faux)
[2.64796 5.04952 5.05045 4.71202 ] pdfxs
n
0.9451 0.95686 0.81176 sc
27.131001 362.080994 357.824005 34.531006 rectfill

1.134 w
n
27.131 396.612 m
27.131 396.612 357.824 -34.531 re
0.003922 0.007843 0.007843 sc
S
40.417 381.951 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B7EF3224EC6E192BD0FEC2445DA87B99CF0E03A72A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 76 /L put
pop
end
%ADOEndSubsetFont
(Lecture du message)
[5.04673 5.31079 4.52607 2.64796 5.04673 3.17971 5.04673 2.64796 5.04673 5.30986 2.39785 
7.17768 5.31079 4.52607 4.77897 5.04673 5.04673 5.04673 ] pdfxs
40.417 368.402 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/acircumflex <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A27
76A2D1EA7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224
D040D883CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC6
4A7A87DBBA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137
AAFE2405FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24
B5B964D5CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E2
0F864B2D53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516
BF8C8307B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C
81E024D177B5D8CCCC9A90BFAF69754028B0000ABEF25A75EA38C28C4F2576> |-
/h <1C60D8A8C9B7EF322B3BE19FB964E037672C8A279BC86F7B9BF0C8203E13
1450D56E388301CEAE43162551FBE05CABF94DC3B5DDFBB4DA55D11470EBD41A
C970CEE2D2EFA88D51157B4EF5536CB673423CDDB06FA774D27105AD2B1AC2DF
A8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 226 /acircumflex put
dup 104 /h put
pop
end
%ADOEndSubsetFont
(L\342che le mutex)
[5.04673 5.31079 4.52607 5.31079 5.04673 2.64796 1.86045 5.31079 2.39692 7.43801 5.05045 
2.64796 5.05045 4.52607 ] pdfxs
n
0.86275 0.90196 0.96078 sc
27.131001 13.848000 357.824005 347.701996 rectfill

n
27.131 361.55 m
27.131 361.55 357.824 -347.702 re
0.003922 0.007843 0.007843 sc
S
0.567 w
n
27.131 361.55 m
268.337 329.144 l
268.337 329.144 m
385.486 361.55 l
27.131 329.144 m
385.486 329.144 l
S
252.925 346.887 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B64EDFED26B9E21A4F64848088903AC9891CF791BDBC4AB29A
CC8B3E8D13924A7DDE35F09AC5F4A8229C87124C732743268600EF8D4582208B
D16D82> |-
/T <1C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A595D
3927> |-
/E <1C60D8A8C9B64EDFFB83C6241DB110BEE5AB2FAD9D94B39ED5E81E7411B6
6E9361DDE78FC667AB91EF9824> |-
/N <1C60D8A8C9B6079F629170873C67115641D0B6890161EC48F71E8D2106F3
AC927984C1E464F121F968> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 65 /A put
dup 84 /T put
dup 69 /E put
dup 78 /N put
pop
end
%ADOEndSubsetFont
(Mode ATTENTE ?)
[7.69369 5.05045 5.31079 5.04859 2.64889 5.587 6.10659 6.36693 6.11789 6.66173 6.10659 
6.36893 2.39692 5.11833 ] pdfxs
32.4445 335.997 m
(vrai)
[4.52328 3.17971 5.04395 1.93855 ] pdfxs
362.599 335.997 m
(faux)
[2.64796 5.05045 5.05045 4.52979 ] pdfxs
n
0.86275 0.90196 0.96078 sc
27.131001 13.848000 240.675003 315.295990 rectfill

1.134 w
n
27.131 329.144 m
27.131 329.144 240.675 -315.296 re
0.003922 0.007843 0.007843 sc
S
0.567 w
n
27.131 329.144 m
151.188 296.738 l
151.188 296.738 m
268.337 329.144 l
27.131 296.738 m
268.337 296.738 l
S
135.513 314.481 m
(Message attendu ?)
[7.70764 5.05045 4.77897 4.51863 5.30986 5.05045 5.05045 2.64796 5.05045 2.64796 2.64796 
5.05045 5.30986 5.05045 5.05045 2.64796 5.05045 ] pdfxs
32.4445 303.587 m
(vraifaux)
[4.52607 3.17971 5.04673 200.252 2.64796 5.04673 5.04673 4.52607 ] pdfxs
n
0.9451 0.95686 0.81176 sc
27.131001 13.848000 123.525009 282.890015 rectfill

1.134 w
n
27.131 296.738 m
27.131 296.738 123.525 -282.89 re
0.003922 0.007843 0.007843 sc
S
40.417 178.218 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eacute <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2
449B0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2
F0C8B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58
B0EEA03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7
C37295284C077711C162623860AACA404F650F8D5169702A9E5C5CF47792B5D6
AD65F4E910CC060DA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 233 /eacute put
pop
end
%ADOEndSubsetFont
(Mode attente d\351sactiv\351)
[7.70857 5.05045 5.31172 5.05045 2.64889 5.04673 2.64889 2.64982 5.05045 5.04673 2.64889 
5.04673 2.64889 5.04673 5.31079 4.52607 5.31172 4.52607 2.64889 2.12264 4.51863 5.04673 
] pdfxs
40.417 164.669 m
(Obtention du mutex)
[7.17589 5.04952 2.64796 5.31079 5.05045 2.64796 1.86045 5.31079 5.05045 2.64796 5.05045 
5.30986 2.39785 7.17675 5.31079 2.39692 5.30986 4.52979 ] pdfxs
40.417 151.126 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P <1C60D8A8C9B64EDFF4950CC53012D47AE97D5586315BA2F5162B63CEC117
C5379A1B3DB174CB2C739C68916A1E99A346AFF71DBF25658867D9AEF1BF3C47
CE1BA73978E8D0D40E52B85A56E08A1369D85E15B0A0C517291916FF6E61D0EF
BF59B4862165C7DEA15B42BE3811C2CAA25C54> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 80 /P put
pop
end
%ADOEndSubsetFont
(Pop du message)
[6.08535 5.30986 5.05324 2.64796 5.05324 5.05324 2.64796 7.17861 5.30986 4.53258 4.53258 
5.31079 5.05324 5.05324 ] pdfxs
40.417 137.577 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/R <1C60D8A8C9B6079F62E89B521DCDBE3DC5497B8DD99916239C0DFA5ED4F6
32B33575F4260343AF5DB7D477D12055F49C5E99C0AC176EAD42723223937F2B
A15ECAD7751CB6A136B700EE485E38E7CDB87D9465C90BB8E29B04FDDA42609F
BC3833B9FB5105619F4CC434003085F449D9FD5022725306B331FB97B31D2952
57B180DE1FD5465D256CCA19301DA97326882845130A5257BF61307ABA64C3F0
B222> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 82 /R put
pop
end
%ADOEndSubsetFont
(Rendu du mutex)
[6.64964 5.30986 5.05045 5.04952 5.31079 2.39692 5.31079 5.04952 2.64796 7.17861 5.04952 
2.64796 5.05045 4.79012 ] pdfxs
40.417 124.034 m
(Envoi de fichiers)
[6.08721 5.30986 4.53444 5.0551 2.12078 2.64796 5.0551 5.31079 2.39692 2.64796 2.12078 
4.53444 5.30986 1.86138 5.30986 2.92867 4.53444 ] pdfxs
n
0.98431 0.81961 0.81176 sc
151.188004 13.848000 116.617996 282.890015 rectfill

n
151.188 296.738 m
151.188 296.738 116.618 -282.89 re
0.003922 0.007843 0.007843 sc
S
164.471 151.126 m
(R\351ception de fichiers)
[6.64871 5.30986 4.52793 5.04859 5.31079 2.39692 2.12078 5.30986 5.04859 2.64703 5.04859 
5.04859 2.64703 2.64796 1.86138 4.7799 5.04859 2.12078 5.05138 3.17878 4.52793 ] pdfxs
n
0.98431 0.81961 0.81176 sc
268.337006 13.848000 116.618011 315.295990 rectfill

n
268.337 329.144 m
268.337 329.144 116.618 -315.296 re
0.003922 0.007843 0.007843 sc
S
281.614 167.323 m
(R\351ception de fichiers)
[6.64871 5.30986 4.51863 5.04952 5.31079 2.39692 2.12078 5.30986 5.05045 2.64796 5.04952 
5.05138 2.64796 2.64703 1.86138 4.7799 5.04859 2.12171 5.05045 3.17971 4.58465 ] pdfxs
n
0.86275 0.90196 0.96078 sc
385.485992 248.660004 395.810028 147.951996 rectfill

n
385.486 396.612 m
385.486 396.612 395.81 -147.952 re
0.003922 0.007843 0.007843 sc
S
0.567 w
n
385.486 396.612 m
588.439 364.206 l
588.439 364.206 m
781.828 396.612 l
385.486 364.206 m
781.828 364.206 l
S
575.687 381.951 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/J <1C60D8A8C9B7A73D9658D627ED627C91284E113B36EE4477BE063DB79C01
4B4C1304B38BFA4196C7B3993D5118026189127416D2C23E3BA1516C5E2D259E
E2D27698DAD25B31EA788FD5CFA3D890F5093AD3EE1D75864143B6DAD8719C69> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 74 /J put
pop
end
%ADOEndSubsetFont
(Job en cours ? )
[4.52607 5.31079 5.04673 2.64796 5.04673 5.30893 2.39785 4.77804 5.05138 5.04673 3.17785 
4.7799 2.39599 5.31079 2.64796 ] pdfxs
390.794 371.061 m
(vrai)
[4.52421 3.17878 5.04488 1.93948 ] pdfxs
758.939 371.061 m
(faux)
[2.64796 5.04952 5.05045 4.71202 ] pdfxs
n
0.86275 0.90196 0.96078 sc
385.485992 248.660004 202.421967 115.545990 rectfill

1.134 w
n
385.486 364.206 m
385.486 364.206 202.422 -115.546 re
0.003922 0.007843 0.007843 sc
S
0.567 w
n
385.486 364.206 m
458.539 331.8 l
458.539 331.8 m
588.439 364.206 l
385.486 331.8 m
588.439 331.8 l
S
443.129 349.546 m
(Mode ATTENTE ?)
[7.69462 5.05045 5.30986 5.05045 2.64889 5.58607 6.10752 6.36786 6.11696 6.66266 6.10659 
6.368 2.39785 5.11926 ] pdfxs
390.795 338.651 m
(vraifaux)
[4.527 3.17878 5.04766 162.005 2.64796 5.04766 5.04766 4.527 ] pdfxs
n
0.9451 0.95686 0.81176 sc
385.485992 248.660004 72.520996 83.139984 rectfill

1.134 w
n
385.486 331.8 m
385.486 331.8 72.521 -83.14 re
0.003922 0.007843 0.007843 sc
S
0.567 w
n
394.518 290.23 m
394.518 308.75 406.619 323.565 421.748 323.565 c
436.875 323.565 448.974 308.75 448.974 290.23 c
448.974 271.71 436.875 256.894 421.748 256.894 c
406.619 256.894 394.518 271.71 394.518 290.23 c
h
394.518 256.363 m
449.507 323.565 l
S
n
0.98431 0.81961 0.81176 sc
458.539001 248.660004 129.369019 83.139984 rectfill

1.134 w
n
458.539 331.8 m
458.539 331.8 129.369 -83.14 re
0.003922 0.007843 0.007843 sc
S
471.822 292.966 m
(Envoi de fichiers)
[6.07605 5.31079 4.52328 5.04395 2.12078 2.64888 5.04395 5.30986 2.39692 2.64796 2.12078 
4.52328 5.30986 1.86138 5.30986 2.97051 4.52328 ] pdfxs
471.822 279.417 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B854D0F4604C2A88D29523E6F8C6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 46 /period put
pop
end
%ADOEndSubsetFont
(continue...)
[4.52514 5.30986 5.0458 2.64796 2.12171 5.05045 5.0458 5.31079 2.39599 2.64889 2.46107 
] pdfxs
n
0.98431 0.81961 0.81176 sc
588.439026 343.221985 192.856995 20.984009 rectfill

n
588.439 364.206 m
588.439 364.206 192.857 -20.984 re
0.003922 0.007843 0.007843 sc
S
601.716 349.546 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B64EDFF43B9E1D43B76E7425A98F23F483468D5596DA760F15
54BAD296AA38A849FEE692D78BAC3B162E2013F61317550246D6F77AF27886D4
E04AB44C473130F6FA990DAC6640A48EC2A80691207E5DDBCA7196686E7CD5C9
80FB78081AA13952C8D8F3373FF54323A4853D0F014ED4C5A1024912E545AAB4
BA7F36D08386B7A08B38C3035C03383BB204897FB23E6B597B4E784900841F18
58E5E1740AFA815171FE44AAE751E7961222B185E93D26B02E1EB5C1FF9174E0
C619907BEEF9FED49CD2B96F29B7B01884> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 66 /B put
pop
end
%ADOEndSubsetFont
(Obtention du mutex JOB)
[7.17589 5.04766 2.64796 5.30893 5.0458 2.64703 1.86045 5.30986 5.0458 2.64703 5.0458 
5.30893 2.39599 7.17675 5.30893 2.39599 5.30986 3.98681 2.64703 4.52514 7.43622 6.07791 
] pdfxs
n
0.86275 0.90196 0.96078 sc
588.439026 248.660004 192.856995 94.031006 rectfill

n
588.439 342.691 m
588.439 342.691 192.857 -94.031 re
0.003922 0.007843 0.007843 sc
S
0.567 w
n
588.439 342.691 m
723.652 310.284 l
723.652 310.284 m
781.828 342.691 l
588.439 310.284 m
781.828 310.284 l
S
709.838 328.031 m
(JOB en attente ?)
[4.53444 7.43622 6.08721 2.39785 5.30986 5.04952 2.64795 5.0551 2.64888 2.64703 5.05045 
5.0551 2.64703 5.0551 2.64703 5.0551 ] pdfxs
593.755 317.14 m
(vraifaux)
[4.52607 3.17878 5.04673 152.436 2.64796 5.04952 5.04673 4.52607 ] pdfxs
n
0.9451 0.95686 0.81176 sc
588.439026 248.660004 134.682007 61.623993 rectfill

1.134 w
n
588.439 310.284 m
588.439 310.284 134.682 -61.624 re
0.003922 0.007843 0.007843 sc
S
601.716 295.625 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E558E
3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051BE
47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE626CDC6D4C322BB39
1537921D673F5AEE3EC19E36E7EFEC0F06A0EA4EAAB6BBA94DDCD11A6A564B13
B510F8C915848233B82F046D854DCD4F1639F149305DC73D3C68DF8AEB47A96A
30E55CF8BAD07FA2825BCE0D675F1CC2EBE61B07B772130E23119250F1EBF8FE
12A2098D9F09F3F21BDC41666CA4A0BB70D5F0A750B44BB93A5FBFDD2BF8DE45
0B277265536F77D5BD6F44FB72FF2E708C60107653AE44BFFB26AFF8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 83 /S put
pop
end
%ADOEndSubsetFont
(S\351lection du JOB )
[6.09372 5.31079 1.86138 5.30893 4.54095 2.64796 2.12171 5.04859 5.06161 2.64889 5.06161 
5.31079 2.39692 4.77897 7.17589 6.09372 2.64889 ] pdfxs
601.716 282.076 m
(Rendu du mutex JOB)
[6.64871 5.31079 5.0458 5.0458 5.30986 2.39692 5.31079 5.04952 2.64796 7.17768 5.05045 
2.64796 5.05045 4.2583 2.64796 4.52514 7.17496 6.07791 ] pdfxs
601.716 268.527 m
(Envoi de fichiers)
[6.07605 5.31079 4.52328 5.04395 2.12078 2.64796 5.04395 5.31079 2.39599 2.64888 2.12078 
4.52328 5.31079 1.86045 5.31079 2.97051 4.52328 ] pdfxs
601.716 254.984 m
(continue...)
[4.52514 5.31079 5.0458 2.64703 2.12171 5.05045 5.0458 5.30986 2.39692 2.64796 2.46107 
] pdfxs
n
0.98431 0.81961 0.81176 sc
723.651978 248.660004 57.643982 61.623993 rectfill

n
723.652 310.284 m
723.652 310.284 57.644 -61.624 re
0.003922 0.007843 0.007843 sc
S
0.567 w
n
730.824 279.472 m
730.824 293.196 740.447 304.175 752.474 304.175 c
764.503 304.175 774.125 293.196 774.125 279.472 c
774.125 265.748 764.503 254.769 752.474 254.769 c
740.447 254.769 730.824 265.748 730.824 279.472 c
h
730.824 254.238 m
774.656 304.175 l
S
n
0.86275 0.90196 0.96078 sc
385.485992 13.848000 395.810028 234.279999 rectfill

1.134 w
n
385.486 248.128 m
385.486 248.128 395.81 -234.28 re
0.003922 0.007843 0.007843 sc
S
0.567 w
n
385.486 248.128 m
584.455 215.722 l
584.455 215.722 m
781.828 248.128 l
385.486 215.722 m
781.828 215.722 l
S
566.919 233.469 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/agrave <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D
1EA7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D
883CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A8
7DBBA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2
405FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B96
4D5CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864
B2D53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8
307B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E02
4D177B5D8A177B323FB6C0F8BDFF520B95577A03E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 224 /agrave put
pop
end
%ADOEndSubsetFont
(TimeOut \340 attendre ?)
[6.10659 2.12078 7.17768 5.05138 7.43622 5.04859 2.64888 2.39692 5.31079 2.39692 5.31079 
2.39599 2.64888 5.30986 5.05045 5.05045 3.17971 5.04952 2.64888 5.31079 ] pdfxs
390.795 222.579 m
(vrai)
[4.52421 3.17878 5.04488 1.93948 ] pdfxs
758.94 222.579 m
(faux)
[2.64796 5.04952 5.05045 4.71202 ] pdfxs
n
0.9451 0.95686 0.81176 sc
385.485992 181.192001 198.436981 34.529999 rectfill

1.134 w
n
385.486 215.722 m
385.486 215.722 198.437 -34.53 re
0.003922 0.007843 0.007843 sc
S
398.767 201.063 m
(Rendu du mutex)
[6.64871 5.31079 5.04859 5.05138 5.30986 2.39692 5.31079 5.05045 2.64796 7.17768 5.05045 
2.64796 5.05045 4.71202 ] pdfxs
398.767 187.514 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/quotesingle <1C60D8A8C9B8ADAC5DDBE05E73C95FD04AE8995553CE47146A
7ABAB05713BD> |-
/egrave <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2
449B0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2
F0C8B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58
B0EEA03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7
C37295284C077711C162623860AACA404F650F8D5169702AC895C72F08EFD0A1
A4B8B093E15CE42> |-
/parenleft <1C60D8A8C9B81F2C3A069EC278D0AA8AE7E32C29FB8AFD2B6368
260D302C905A973F0B3449ED9E18E81E16B7B273530E9BC14ED76D4376A01C0A
577DC235F833AFCC30669C812FBF097879E1> |-
/I <1C60D8A8C9B854D0F463D3892D665712D6B7D6A81E> |-
/U <1C60D8A8C9B6079F6D3F1E4545C3E1CC9D8EF54571065F01BE5A50957BD2
D8AD04D30C23B37CA98B969ECB5CA0D9A7C563636CB33377BB3DEB53D45DD0F3
E333CD69EA3B53D63C91B303CFDF29F59C20776D4DC576C9C080B76AB60A2167
3EFC1F645BF33D33929C60> |-
/parenright <1C60D8A8C9B81F2C3A30D3A3F0A8D738E712823A2480470C32A
2885DCE4A77E926C520C7B7E1016BB28443D8E7B8AC0F7C4F3BD721C19F19D47
14AF52ABD0227B6CDD854C568D5A6F3817645C5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 39 /quotesingle put
dup 232 /egrave put
dup 40 /parenleft put
dup 73 /I put
dup 85 /U put
dup 41 /parenright put
pop
end
%ADOEndSubsetFont
(Attente d'un \351v\350nement \(TIMEOUT\))
[5.587 2.64796 2.64796 5.05603 5.05603 2.64796 5.05603 2.64796 5.30986 1.32857 5.31079 
5.05045 2.64796 5.05603 4.77804 5.05603 5.05603 5.30986 7.17768 5.05138 5.30893 2.39785 
2.64796 3.17878 6.10752 2.12729 7.70764 6.08814 7.17589 6.64964 6.10659 2.9826 ] pdfxs
n
0.86275 0.90196 0.96078 sc
385.485992 81.316002 198.436981 99.344002 rectfill

n
385.486 180.66 m
385.486 180.66 198.437 -99.344 re
0.003922 0.007843 0.007843 sc
S
0.567 w
n
385.486 180.66 m
535.044 148.254 l
535.044 148.254 m
584.455 180.66 l
385.486 148.254 m
584.455 148.254 l
S
523.881 165.999 m
(Timeout de A)
[6.10659 2.12078 7.17768 5.05138 5.30893 5.05138 2.64796 2.64796 5.05045 5.05045 2.64796 
6.08256 ] pdfxs
390.794 155.109 m
(vraifaux)
[4.52607 3.17878 5.04673 158.022 2.64889 5.05045 5.04673 4.52607 ] pdfxs
n
0.86275 0.90196 0.96078 sc
385.485992 81.316002 149.027008 66.937996 rectfill

1.134 w
n
385.486 148.254 m
385.486 148.254 149.027 -66.938 re
0.003922 0.007843 0.007843 sc
S
0.567 w
n
385.486 148.254 m
460.132 115.847 l
460.132 115.847 m
535.044 148.254 l
385.486 115.847 m
535.044 115.847 l
S
452.957 133.594 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/y <1C60D8A8C9B7A73DB92EFAEC912AA9CB61EA2C87B96577B4D13A11140AAA
18C6E226D96ACA3DE3B427B0A298EF106E8BC0FCA1DC8D81AF2F08A42A0F5836
B6230FDF576E37CE129EFF9730F23EC10CF5ACA4D4CA70309E71B89A944CA734
8AEBF55FF5ADA9F61B4BA14C9A2301A8C53EBFBE665E1DC22E> |-
/equal <1C60D8A8C9B7F374869C4D81D9B128A787F701C3A1164A793E363981
F7468DA1474C45> |-
/three <1C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368A
FE548E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD1
0C10DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA76
98FDFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA
14A0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C0
2C0A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608
AF6A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 121 /y put
dup 61 /equal put
dup 51 /three put
pop
end
%ADOEndSubsetFont
(Try = 3 ?)
[6.10659 3.17971 4.5177 2.64796 5.57763 2.64796 5.05045 2.64796 5.59529 ] pdfxs
390.795 122.699 m
(vraifaux)
[4.52514 3.17878 5.0458 108.612 2.64889 5.05045 5.0458 4.52514 ] pdfxs
n
0.9451 0.95686 0.81176 sc
385.485992 81.316002 74.114990 34.530998 rectfill

1.134 w
n
385.486 115.847 m
385.486 115.847 74.115 -34.531 re
0.003922 0.007843 0.007843 sc
S
398.767 101.188 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/plus <1C60D8A8C9B7F3748941D4B1C211C787F1DCE1076406E139A12F470B3
97B613EE7D27104427D3AF38200F99E7A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 43 /plus put
pop
end
%ADOEndSubsetFont
(Essais ++)
[6.09651 4.77897 4.54374 5.0644 2.12171 4.77804 2.39692 5.83796 5.32473 ] pdfxs
398.767 87.6388 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B81F2C3A78A5675B101A923F2D2A8AB56C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 45 /hyphen put
pop
end
%ADOEndSubsetFont
(Phase - -)
[6.09651 5.30986 5.0644 4.54374 5.30986 2.39692 3.17878 2.64889 2.99097 ] pdfxs
n
0.98431 0.81961 0.81176 sc
460.131989 81.316002 74.381012 34.530998 rectfill

n
460.132 115.847 m
460.132 115.847 74.381 -34.531 re
0.003922 0.007843 0.007843 sc
S
473.41 101.188 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3A
BC1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A1
0425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E3
1D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC
60C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A
5B546505C954A88> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 48 /zero put
pop
end
%ADOEndSubsetFont
(Phase = 0)
[6.09651 5.31079 5.0644 4.54374 5.31079 2.39692 5.83889 2.39692 5.0644 ] pdfxs
473.41 87.6388 m
(continue...)
[4.52607 5.30986 5.04673 2.64796 2.12171 5.04859 5.04673 5.31079 2.39599 2.64889 2.462 
] pdfxs
n
0.98431 0.81961 0.81176 sc
535.044006 81.316002 48.879028 66.937996 rectfill

n
535.044 148.254 m
535.044 148.254 48.879 -66.938 re
0.003922 0.007843 0.007843 sc
S
0.567 w
n
541.154 114.785 m
541.154 129.69 549.3 141.614 559.484 141.614 c
569.667 141.614 577.814 129.69 577.814 114.785 c
577.814 99.882 569.667 87.958 559.484 87.958 c
549.3 87.958 541.154 99.882 541.154 114.785 c
h
541.154 87.427 m
578.343 141.614 l
S
n
0.86275 0.90196 0.96078 sc
385.485992 13.848000 198.436981 66.938004 rectfill

1.134 w
n
385.486 80.786 m
385.486 80.786 198.437 -66.938 re
0.003922 0.007843 0.007843 sc
S
0.567 w
n
385.486 80.786 m
461.992 48.38 l
461.992 48.38 m
584.455 80.786 l
385.486 48.38 m
584.455 48.38 l
S
450.836 66.124 m
(Timeout de B)
[6.10659 2.12078 7.17768 5.05138 5.30986 5.05045 2.64796 2.64796 5.04952 5.05045 2.64796 
6.26479 ] pdfxs
390.795 55.2291 m
(vraifaux)
[4.52607 3.17878 5.04673 158.022 2.64889 5.05045 5.04673 4.52607 ] pdfxs
n
0.9451 0.95686 0.81176 sc
385.485992 13.848000 75.973999 34.532001 rectfill

1.134 w
n
385.486 48.38 m
385.486 48.38 75.974 -34.532 re
0.003922 0.007843 0.007843 sc
S
398.767 33.719 m
(PhaseB = 0)
[6.09651 5.30986 5.0644 4.54374 5.30986 6.11696 2.64796 5.57763 2.64796 5.0644 ] pdfxs
398.767 20.1661 m
(continue...)
[4.52607 5.31079 5.04673 2.64703 2.12171 5.04673 5.04673 5.30986 2.39692 2.64796 2.462 
] pdfxs
n
0.98431 0.81961 0.81176 sc
461.992004 13.848000 69.598999 34.532001 rectfill

n
461.992 48.38 m
461.992 48.38 69.599 -34.532 re
0.003922 0.007843 0.007843 sc
S
475.277 27.077 m
(continue...)
[4.52607 5.31079 5.04673 2.64889 2.12264 5.05138 5.04673 5.31172 2.39692 2.64982 2.462 
] pdfxs
n
0.98431 0.81961 0.81176 sc
584.455017 13.848000 196.841003 201.873993 rectfill

n
584.455 215.722 m
584.455 215.722 196.841 -201.874 re
0.003922 0.007843 0.007843 sc
S
597.733 124.298 m
(Rendu du mutex)
[6.65057 5.30986 5.05045 5.05138 5.30986 2.39692 5.31079 5.04859 2.64889 7.17768 5.04952 
2.64889 5.05045 4.71295 ] pdfxs
597.733 110.749 m
%ADOBeginSubsetFont: HLEAAA+ArialMT AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
systemdict begin
/HLEAAA+ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/F <1C60D8A8C9B7D8BE1661AF70E1029B586475C590C02056C6BE2BB9C2329F
7F6ED1937D1E8A10> |-
/V <1C60D8A8C9B64EDFFB759009DDECF50F0319B844741E3CEB2C0ABDDB89E7
563FC0955B866D61D9CC736D3C346A5623E20C1E4D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HLEAAA+ArialMT findfont /Encoding get
dup 70 /F put
dup 86 /V put
pop
end
%ADOEndSubsetFont
(Attente d'un \351v\350nement \(FOREVER\))
[5.58793 2.64796 2.64796 5.06068 5.06068 2.64796 5.06068 2.64796 5.31079 1.32857 5.31079 
5.04859 2.64796 5.06068 4.77804 5.06068 5.06068 5.30986 7.17768 5.05138 5.30893 2.39785 
2.64796 3.17878 5.58686 7.17682 6.64872 6.09279 5.84826 6.09279 6.64964 2.98725 ] pdfxs
597.733 97.2053 m
(continue...)
[4.52514 5.31079 5.0458 2.64796 2.12171 5.04952 5.0458 5.31079 2.39599 2.64889 2.46107 
] pdfxs
Q
/HLEAAA+ArialMT /Font _pdfUndefineResource
/N11 /Font _pdfUndefineResource
/ZWMBAA+Arial-BoldMT /Font _pdfUndefineResource
/N10 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
